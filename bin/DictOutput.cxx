//
// File generated by rootcint at Fri Apr  5 18:47:16 2019

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME bindIDictOutput
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "DictOutput.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::goddessEvent goddessEvent;
      #else
      class goddessEvent  {
         public:
         //friend XX;
         vector< UShort_t > channels; //
         vector< UShort_t > values; //
         G__uint64 timestamp; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::detectorOUT detectorOUT;
      #else
      class detectorOUT  {
         public:
         //friend XX;
         unsigned short depth; //
         unsigned short upstream; //
         int pStrip; //
         int nStrip; //
         float pECal; //
         float nECal; //
         ::TVector3 evPos; //
         float eNearCal; //
         float eFarCal; //
      };
      #endif

   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void solidVector_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_solidVector(void *p = 0);
   static void *newArray_solidVector(Long_t size, void *p);
   static void delete_solidVector(void *p);
   static void deleteArray_solidVector(void *p);
   static void destruct_solidVector(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::solidVector*)
   {
      ::solidVector *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::solidVector >(0);
      static ::ROOT::TGenericClassInfo 
         instance("solidVector", ::solidVector::Class_Version(), "./include/solidVector.h", 24,
                  typeid(::solidVector), DefineBehavior(ptr, ptr),
                  &::solidVector::Dictionary, isa_proxy, 4,
                  sizeof(::solidVector) );
      instance.SetNew(&new_solidVector);
      instance.SetNewArray(&newArray_solidVector);
      instance.SetDelete(&delete_solidVector);
      instance.SetDeleteArray(&deleteArray_solidVector);
      instance.SetDestructor(&destruct_solidVector);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::solidVector*)
   {
      return GenerateInitInstanceLocal((::solidVector*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::solidVector*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void goddessEvent_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void goddessEvent_Dictionary();
   static void *new_goddessEvent(void *p = 0);
   static void *newArray_goddessEvent(Long_t size, void *p);
   static void delete_goddessEvent(void *p);
   static void deleteArray_goddessEvent(void *p);
   static void destruct_goddessEvent(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::goddessEvent*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::goddessEvent) == sizeof(::ROOT::Shadow::goddessEvent));
      ::goddessEvent *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::goddessEvent),0);
      static ::ROOT::TGenericClassInfo 
         instance("goddessEvent", "./include/goddessEvent.h", 21,
                  typeid(::goddessEvent), DefineBehavior(ptr, ptr),
                  &goddessEvent_ShowMembers, &goddessEvent_Dictionary, isa_proxy, 4,
                  sizeof(::goddessEvent) );
      instance.SetNew(&new_goddessEvent);
      instance.SetNewArray(&newArray_goddessEvent);
      instance.SetDelete(&delete_goddessEvent);
      instance.SetDeleteArray(&deleteArray_goddessEvent);
      instance.SetDestructor(&destruct_goddessEvent);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::goddessEvent*)
   {
      return GenerateInitInstanceLocal((::goddessEvent*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::goddessEvent*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void goddessEvent_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::goddessEvent*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void orrubaDet_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_orrubaDet(void *p);
   static void deleteArray_orrubaDet(void *p);
   static void destruct_orrubaDet(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::orrubaDet*)
   {
      ::orrubaDet *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::orrubaDet >(0);
      static ::ROOT::TGenericClassInfo 
         instance("orrubaDet", ::orrubaDet::Class_Version(), "./include/orrubaDet.h", 27,
                  typeid(::orrubaDet), DefineBehavior(ptr, ptr),
                  &::orrubaDet::Dictionary, isa_proxy, 4,
                  sizeof(::orrubaDet) );
      instance.SetDelete(&delete_orrubaDet);
      instance.SetDeleteArray(&deleteArray_orrubaDet);
      instance.SetDestructor(&destruct_orrubaDet);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::orrubaDet*)
   {
      return GenerateInitInstanceLocal((::orrubaDet*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::orrubaDet*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void BB10_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_BB10(void *p = 0);
   static void *newArray_BB10(Long_t size, void *p);
   static void delete_BB10(void *p);
   static void deleteArray_BB10(void *p);
   static void destruct_BB10(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::BB10*)
   {
      ::BB10 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::BB10 >(0);
      static ::ROOT::TGenericClassInfo 
         instance("BB10", ::BB10::Class_Version(), "./include/BB10.h", 28,
                  typeid(::BB10), DefineBehavior(ptr, ptr),
                  &::BB10::Dictionary, isa_proxy, 4,
                  sizeof(::BB10) );
      instance.SetNew(&new_BB10);
      instance.SetNewArray(&newArray_BB10);
      instance.SetDelete(&delete_BB10);
      instance.SetDeleteArray(&deleteArray_BB10);
      instance.SetDestructor(&destruct_BB10);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::BB10*)
   {
      return GenerateInitInstanceLocal((::BB10*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::BB10*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void detectorOUT_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void detectorOUT_Dictionary();
   static void *new_detectorOUT(void *p = 0);
   static void *newArray_detectorOUT(Long_t size, void *p);
   static void delete_detectorOUT(void *p);
   static void deleteArray_detectorOUT(void *p);
   static void destruct_detectorOUT(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::detectorOUT*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::detectorOUT) == sizeof(::ROOT::Shadow::detectorOUT));
      ::detectorOUT *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::detectorOUT),0);
      static ::ROOT::TGenericClassInfo 
         instance("detectorOUT", "./include/detectorOut.h", 24,
                  typeid(::detectorOUT), DefineBehavior(ptr, ptr),
                  &detectorOUT_ShowMembers, &detectorOUT_Dictionary, isa_proxy, 4,
                  sizeof(::detectorOUT) );
      instance.SetNew(&new_detectorOUT);
      instance.SetNewArray(&newArray_detectorOUT);
      instance.SetDelete(&delete_detectorOUT);
      instance.SetDeleteArray(&deleteArray_detectorOUT);
      instance.SetDestructor(&destruct_detectorOUT);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::detectorOUT*)
   {
      return GenerateInitInstanceLocal((::detectorOUT*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::detectorOUT*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void detectorOUT_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::detectorOUT*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void g2IntPt_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_g2IntPt(void *p = 0);
   static void *newArray_g2IntPt(Long_t size, void *p);
   static void delete_g2IntPt(void *p);
   static void deleteArray_g2IntPt(void *p);
   static void destruct_g2IntPt(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::g2IntPt*)
   {
      ::g2IntPt *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::g2IntPt >(0);
      static ::ROOT::TGenericClassInfo 
         instance("g2IntPt", ::g2IntPt::Class_Version(), "./include/g2IntPt.h", 21,
                  typeid(::g2IntPt), DefineBehavior(ptr, ptr),
                  &::g2IntPt::Dictionary, isa_proxy, 4,
                  sizeof(::g2IntPt) );
      instance.SetNew(&new_g2IntPt);
      instance.SetNewArray(&newArray_g2IntPt);
      instance.SetDelete(&delete_g2IntPt);
      instance.SetDeleteArray(&deleteArray_g2IntPt);
      instance.SetDestructor(&destruct_g2IntPt);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::g2IntPt*)
   {
      return GenerateInitInstanceLocal((::g2IntPt*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::g2IntPt*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void g2CrystalEvent_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_g2CrystalEvent(void *p = 0);
   static void *newArray_g2CrystalEvent(Long_t size, void *p);
   static void delete_g2CrystalEvent(void *p);
   static void deleteArray_g2CrystalEvent(void *p);
   static void destruct_g2CrystalEvent(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::g2CrystalEvent*)
   {
      ::g2CrystalEvent *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::g2CrystalEvent >(0);
      static ::ROOT::TGenericClassInfo 
         instance("g2CrystalEvent", ::g2CrystalEvent::Class_Version(), "./include/g2CrystalEvent.h", 22,
                  typeid(::g2CrystalEvent), DefineBehavior(ptr, ptr),
                  &::g2CrystalEvent::Dictionary, isa_proxy, 4,
                  sizeof(::g2CrystalEvent) );
      instance.SetNew(&new_g2CrystalEvent);
      instance.SetNewArray(&newArray_g2CrystalEvent);
      instance.SetDelete(&delete_g2CrystalEvent);
      instance.SetDeleteArray(&deleteArray_g2CrystalEvent);
      instance.SetDestructor(&destruct_g2CrystalEvent);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::g2CrystalEvent*)
   {
      return GenerateInitInstanceLocal((::g2CrystalEvent*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::g2CrystalEvent*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void g2OUT_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_g2OUT(void *p = 0);
   static void *newArray_g2OUT(Long_t size, void *p);
   static void delete_g2OUT(void *p);
   static void deleteArray_g2OUT(void *p);
   static void destruct_g2OUT(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::g2OUT*)
   {
      ::g2OUT *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::g2OUT >(0);
      static ::ROOT::TGenericClassInfo 
         instance("g2OUT", ::g2OUT::Class_Version(), "./include/g2Out.h", 30,
                  typeid(::g2OUT), DefineBehavior(ptr, ptr),
                  &::g2OUT::Dictionary, isa_proxy, 4,
                  sizeof(::g2OUT) );
      instance.SetNew(&new_g2OUT);
      instance.SetNewArray(&newArray_g2OUT);
      instance.SetDelete(&delete_g2OUT);
      instance.SetDeleteArray(&deleteArray_g2OUT);
      instance.SetDestructor(&destruct_g2OUT);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::g2OUT*)
   {
      return GenerateInitInstanceLocal((::g2OUT*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::g2OUT*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void goddessOut_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_goddessOut(void *p = 0);
   static void *newArray_goddessOut(Long_t size, void *p);
   static void delete_goddessOut(void *p);
   static void deleteArray_goddessOut(void *p);
   static void destruct_goddessOut(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::goddessOut*)
   {
      ::goddessOut *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::goddessOut >(0);
      static ::ROOT::TGenericClassInfo 
         instance("goddessOut", ::goddessOut::Class_Version(), "./include/goddessOut.h", 24,
                  typeid(::goddessOut), DefineBehavior(ptr, ptr),
                  &::goddessOut::Dictionary, isa_proxy, 4,
                  sizeof(::goddessOut) );
      instance.SetNew(&new_goddessOut);
      instance.SetNewArray(&newArray_goddessOut);
      instance.SetDelete(&delete_goddessOut);
      instance.SetDeleteArray(&deleteArray_goddessOut);
      instance.SetDestructor(&destruct_goddessOut);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::goddessOut*)
   {
      return GenerateInitInstanceLocal((::goddessOut*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::goddessOut*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void QQQ5_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_QQQ5(void *p = 0);
   static void *newArray_QQQ5(Long_t size, void *p);
   static void delete_QQQ5(void *p);
   static void deleteArray_QQQ5(void *p);
   static void destruct_QQQ5(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::QQQ5*)
   {
      ::QQQ5 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::QQQ5 >(0);
      static ::ROOT::TGenericClassInfo 
         instance("QQQ5", ::QQQ5::Class_Version(), "./include/QQQ5.h", 28,
                  typeid(::QQQ5), DefineBehavior(ptr, ptr),
                  &::QQQ5::Dictionary, isa_proxy, 4,
                  sizeof(::QQQ5) );
      instance.SetNew(&new_QQQ5);
      instance.SetNewArray(&newArray_QQQ5);
      instance.SetDelete(&delete_QQQ5);
      instance.SetDeleteArray(&deleteArray_QQQ5);
      instance.SetDestructor(&destruct_QQQ5);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::QQQ5*)
   {
      return GenerateInitInstanceLocal((::QQQ5*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::QQQ5*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void superX3_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_superX3(void *p = 0);
   static void *newArray_superX3(Long_t size, void *p);
   static void delete_superX3(void *p);
   static void deleteArray_superX3(void *p);
   static void destruct_superX3(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::superX3*)
   {
      ::superX3 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::superX3 >(0);
      static ::ROOT::TGenericClassInfo 
         instance("superX3", ::superX3::Class_Version(), "./include/superX3.h", 28,
                  typeid(::superX3), DefineBehavior(ptr, ptr),
                  &::superX3::Dictionary, isa_proxy, 4,
                  sizeof(::superX3) );
      instance.SetNew(&new_superX3);
      instance.SetNewArray(&newArray_superX3);
      instance.SetDelete(&delete_superX3);
      instance.SetDeleteArray(&deleteArray_superX3);
      instance.SetDestructor(&destruct_superX3);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::superX3*)
   {
      return GenerateInitInstanceLocal((::superX3*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::superX3*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void ionChamber_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_ionChamber(void *p = 0);
   static void *newArray_ionChamber(Long_t size, void *p);
   static void delete_ionChamber(void *p);
   static void deleteArray_ionChamber(void *p);
   static void destruct_ionChamber(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ionChamber*)
   {
      ::ionChamber *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ionChamber >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ionChamber", ::ionChamber::Class_Version(), "./include/ionChamber.h", 28,
                  typeid(::ionChamber), DefineBehavior(ptr, ptr),
                  &::ionChamber::Dictionary, isa_proxy, 4,
                  sizeof(::ionChamber) );
      instance.SetNew(&new_ionChamber);
      instance.SetNewArray(&newArray_ionChamber);
      instance.SetDelete(&delete_ionChamber);
      instance.SetDeleteArray(&deleteArray_ionChamber);
      instance.SetDestructor(&destruct_ionChamber);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ionChamber*)
   {
      return GenerateInitInstanceLocal((::ionChamber*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ionChamber*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void tdc_t_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_tdc_t(void *p = 0);
   static void *newArray_tdc_t(Long_t size, void *p);
   static void delete_tdc_t(void *p);
   static void deleteArray_tdc_t(void *p);
   static void destruct_tdc_t(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::tdc_t*)
   {
      ::tdc_t *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::tdc_t >(0);
      static ::ROOT::TGenericClassInfo 
         instance("tdc_t", ::tdc_t::Class_Version(), "./include/tdc.h", 28,
                  typeid(::tdc_t), DefineBehavior(ptr, ptr),
                  &::tdc_t::Dictionary, isa_proxy, 4,
                  sizeof(::tdc_t) );
      instance.SetNew(&new_tdc_t);
      instance.SetNewArray(&newArray_tdc_t);
      instance.SetDelete(&delete_tdc_t);
      instance.SetDeleteArray(&deleteArray_tdc_t);
      instance.SetDestructor(&destruct_tdc_t);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::tdc_t*)
   {
      return GenerateInitInstanceLocal((::tdc_t*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::tdc_t*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void goddessFull_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_goddessFull(void *p = 0);
   static void *newArray_goddessFull(Long_t size, void *p);
   static void delete_goddessFull(void *p);
   static void deleteArray_goddessFull(void *p);
   static void destruct_goddessFull(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::goddessFull*)
   {
      ::goddessFull *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::goddessFull >(0);
      static ::ROOT::TGenericClassInfo 
         instance("goddessFull", ::goddessFull::Class_Version(), "./include/goddessFull.h", 35,
                  typeid(::goddessFull), DefineBehavior(ptr, ptr),
                  &::goddessFull::Dictionary, isa_proxy, 4,
                  sizeof(::goddessFull) );
      instance.SetNew(&new_goddessFull);
      instance.SetNewArray(&newArray_goddessFull);
      instance.SetDelete(&delete_goddessFull);
      instance.SetDeleteArray(&deleteArray_goddessFull);
      instance.SetDestructor(&destruct_goddessFull);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::goddessFull*)
   {
      return GenerateInitInstanceLocal((::goddessFull*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::goddessFull*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *solidVector::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *solidVector::Class_Name()
{
   return "solidVector";
}

//______________________________________________________________________________
const char *solidVector::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::solidVector*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int solidVector::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::solidVector*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void solidVector::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::solidVector*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *solidVector::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::solidVector*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *orrubaDet::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *orrubaDet::Class_Name()
{
   return "orrubaDet";
}

//______________________________________________________________________________
const char *orrubaDet::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::orrubaDet*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int orrubaDet::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::orrubaDet*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void orrubaDet::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::orrubaDet*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *orrubaDet::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::orrubaDet*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *BB10::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *BB10::Class_Name()
{
   return "BB10";
}

//______________________________________________________________________________
const char *BB10::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::BB10*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int BB10::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::BB10*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void BB10::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::BB10*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *BB10::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::BB10*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *g2IntPt::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *g2IntPt::Class_Name()
{
   return "g2IntPt";
}

//______________________________________________________________________________
const char *g2IntPt::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::g2IntPt*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int g2IntPt::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::g2IntPt*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void g2IntPt::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::g2IntPt*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *g2IntPt::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::g2IntPt*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *g2CrystalEvent::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *g2CrystalEvent::Class_Name()
{
   return "g2CrystalEvent";
}

//______________________________________________________________________________
const char *g2CrystalEvent::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::g2CrystalEvent*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int g2CrystalEvent::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::g2CrystalEvent*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void g2CrystalEvent::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::g2CrystalEvent*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *g2CrystalEvent::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::g2CrystalEvent*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *g2OUT::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *g2OUT::Class_Name()
{
   return "g2OUT";
}

//______________________________________________________________________________
const char *g2OUT::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::g2OUT*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int g2OUT::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::g2OUT*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void g2OUT::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::g2OUT*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *g2OUT::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::g2OUT*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *goddessOut::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *goddessOut::Class_Name()
{
   return "goddessOut";
}

//______________________________________________________________________________
const char *goddessOut::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::goddessOut*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int goddessOut::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::goddessOut*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void goddessOut::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::goddessOut*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *goddessOut::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::goddessOut*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *QQQ5::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *QQQ5::Class_Name()
{
   return "QQQ5";
}

//______________________________________________________________________________
const char *QQQ5::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::QQQ5*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int QQQ5::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::QQQ5*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void QQQ5::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::QQQ5*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *QQQ5::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::QQQ5*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *superX3::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *superX3::Class_Name()
{
   return "superX3";
}

//______________________________________________________________________________
const char *superX3::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::superX3*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int superX3::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::superX3*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void superX3::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::superX3*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *superX3::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::superX3*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *ionChamber::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *ionChamber::Class_Name()
{
   return "ionChamber";
}

//______________________________________________________________________________
const char *ionChamber::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ionChamber*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int ionChamber::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ionChamber*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void ionChamber::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ionChamber*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *ionChamber::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ionChamber*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *tdc_t::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *tdc_t::Class_Name()
{
   return "tdc_t";
}

//______________________________________________________________________________
const char *tdc_t::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::tdc_t*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int tdc_t::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::tdc_t*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void tdc_t::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::tdc_t*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *tdc_t::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::tdc_t*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *goddessFull::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *goddessFull::Class_Name()
{
   return "goddessFull";
}

//______________________________________________________________________________
const char *goddessFull::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::goddessFull*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int goddessFull::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::goddessFull*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void goddessFull::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::goddessFull*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *goddessFull::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::goddessFull*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void solidVector::Streamer(TBuffer &R__b)
{
   // Stream an object of class solidVector.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(solidVector::Class(),this);
   } else {
      R__b.WriteClassBuffer(solidVector::Class(),this);
   }
}

//______________________________________________________________________________
void solidVector::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class solidVector.
      TClass *R__cl = ::solidVector::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rotZ", &rotZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rotPhi", &rotPhi);
      TVector3::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_solidVector(void *p) {
      return  p ? new(p) ::solidVector : new ::solidVector;
   }
   static void *newArray_solidVector(Long_t nElements, void *p) {
      return p ? new(p) ::solidVector[nElements] : new ::solidVector[nElements];
   }
   // Wrapper around operator delete
   static void delete_solidVector(void *p) {
      delete ((::solidVector*)p);
   }
   static void deleteArray_solidVector(void *p) {
      delete [] ((::solidVector*)p);
   }
   static void destruct_solidVector(void *p) {
      typedef ::solidVector current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::solidVector

//______________________________________________________________________________
namespace ROOT {
   void goddessEvent_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class goddessEvent.
      typedef ::ROOT::Shadow::goddessEvent ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::goddessEvent*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "channels", (void*)&sobj->channels);
      R__insp.InspectMember("vector<UShort_t>", (void*)&sobj->channels, "channels.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "values", (void*)&sobj->values);
      R__insp.InspectMember("vector<UShort_t>", (void*)&sobj->values, "values.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "timestamp", &sobj->timestamp);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_goddessEvent(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::goddessEvent : new ::goddessEvent;
   }
   static void *newArray_goddessEvent(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::goddessEvent[nElements] : new ::goddessEvent[nElements];
   }
   // Wrapper around operator delete
   static void delete_goddessEvent(void *p) {
      delete ((::goddessEvent*)p);
   }
   static void deleteArray_goddessEvent(void *p) {
      delete [] ((::goddessEvent*)p);
   }
   static void destruct_goddessEvent(void *p) {
      typedef ::goddessEvent current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::goddessEvent

//______________________________________________________________________________
void orrubaDet::Streamer(TBuffer &R__b)
{
   // Stream an object of class orrubaDet.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(orrubaDet::Class(),this);
   } else {
      R__b.WriteClassBuffer(orrubaDet::Class(),this);
   }
}

//______________________________________________________________________________
void orrubaDet::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class orrubaDet.
      TClass *R__cl = ::orrubaDet::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nTYPE", &nTYPE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pTYPE", &pTYPE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "numPtype", &numPtype);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "numNtype", &numNtype);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eRawPmap", (void*)&eRawPmap);
      R__insp.InspectMember("orrubaDet::valueMap", (void*)&eRawPmap, "eRawPmap.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eRawNmap", (void*)&eRawNmap);
      R__insp.InspectMember("orrubaDet::valueMap", (void*)&eRawNmap, "eRawNmap.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eCalPmap", (void*)&eCalPmap);
      R__insp.InspectMember("orrubaDet::valueMap", (void*)&eCalPmap, "eCalPmap.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eCalNmap", (void*)&eCalNmap);
      R__insp.InspectMember("orrubaDet::valueMap", (void*)&eCalNmap, "eCalNmap.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "timePmap", (void*)&timePmap);
      R__insp.InspectMember("orrubaDet::timeMap", (void*)&timePmap, "timePmap.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "timeNmap", (void*)&timeNmap);
      R__insp.InspectMember("orrubaDet::timeMap", (void*)&timeNmap, "timeNmap.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "chMapP", (void*)&chMapP);
      R__insp.InspectMember("orrubaDet::chMap", (void*)&chMapP, "chMapP.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "chMapN", (void*)&chMapN);
      R__insp.InspectMember("orrubaDet::chMap", (void*)&chMapN, "chMapN.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "parECalP", (void*)&parECalP);
      R__insp.InspectMember("vector<std::vector<Float_t> >", (void*)&parECalP, "parECalP.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "parECalN", (void*)&parECalN);
      R__insp.InspectMember("vector<std::vector<Float_t> >", (void*)&parECalN, "parECalN.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "threshP", (void*)&threshP);
      R__insp.InspectMember("vector<Int_t>", (void*)&threshP, "threshP.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "threshN", (void*)&threshN);
      R__insp.InspectMember("vector<Int_t>", (void*)&threshN, "threshN.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "serialNum", (void*)&serialNum);
      R__insp.InspectMember("string", (void*)&serialNum, "serialNum.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "posID", (void*)&posID);
      R__insp.InspectMember("string", (void*)&posID, "posID.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sector", &sector);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "depth", &depth);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "upStream", &upStream);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "detPos", &detPos);
      R__insp.InspectMember(detPos, "detPos.");
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_orrubaDet(void *p) {
      delete ((::orrubaDet*)p);
   }
   static void deleteArray_orrubaDet(void *p) {
      delete [] ((::orrubaDet*)p);
   }
   static void destruct_orrubaDet(void *p) {
      typedef ::orrubaDet current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::orrubaDet

//______________________________________________________________________________
void BB10::Streamer(TBuffer &R__b)
{
   // Stream an object of class BB10.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(BB10::Class(),this);
   } else {
      R__b.WriteClassBuffer(BB10::Class(),this);
   }
}

//______________________________________________________________________________
void BB10::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class BB10.
      TClass *R__cl = ::BB10::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "activeWidth", &activeWidth);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "stripsP", (void*)&stripsP);
      R__insp.InspectMember("vector<Int_t>", (void*)&stripsP, "stripsP.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eRawP", (void*)&eRawP);
      R__insp.InspectMember("vector<Float_t>", (void*)&eRawP, "eRawP.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eCalP", (void*)&eCalP);
      R__insp.InspectMember("vector<Float_t>", (void*)&eCalP, "eCalP.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "timeP", (void*)&timeP);
      R__insp.InspectMember("vector<uint64_t>", (void*)&timeP, "timeP.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pStripEdgePos[9]", pStripEdgePos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pStripCenterPos[8]", pStripCenterPos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "binsP[9]", binsP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "binsAzimuthal[9]", binsAzimuthal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "binsPCenter[8]", binsPCenter);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "binsAzimuthalCenter[8]", binsAzimuthalCenter);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eventPos", &eventPos);
      R__insp.InspectMember(eventPos, "eventPos.");
      orrubaDet::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_BB10(void *p) {
      return  p ? new(p) ::BB10 : new ::BB10;
   }
   static void *newArray_BB10(Long_t nElements, void *p) {
      return p ? new(p) ::BB10[nElements] : new ::BB10[nElements];
   }
   // Wrapper around operator delete
   static void delete_BB10(void *p) {
      delete ((::BB10*)p);
   }
   static void deleteArray_BB10(void *p) {
      delete [] ((::BB10*)p);
   }
   static void destruct_BB10(void *p) {
      typedef ::BB10 current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::BB10

//______________________________________________________________________________
namespace ROOT {
   void detectorOUT_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class detectorOUT.
      typedef ::ROOT::Shadow::detectorOUT ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::detectorOUT*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "depth", &sobj->depth);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "upstream", &sobj->upstream);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pStrip", &sobj->pStrip);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nStrip", &sobj->nStrip);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pECal", &sobj->pECal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nECal", &sobj->nECal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "evPos", &sobj->evPos);
      R__insp.InspectMember(sobj->evPos, "evPos.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eNearCal", &sobj->eNearCal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eFarCal", &sobj->eFarCal);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_detectorOUT(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::detectorOUT : new ::detectorOUT;
   }
   static void *newArray_detectorOUT(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::detectorOUT[nElements] : new ::detectorOUT[nElements];
   }
   // Wrapper around operator delete
   static void delete_detectorOUT(void *p) {
      delete ((::detectorOUT*)p);
   }
   static void deleteArray_detectorOUT(void *p) {
      delete [] ((::detectorOUT*)p);
   }
   static void destruct_detectorOUT(void *p) {
      typedef ::detectorOUT current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::detectorOUT

//______________________________________________________________________________
void g2IntPt::Streamer(TBuffer &R__b)
{
   // Stream an object of class g2IntPt.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(g2IntPt::Class(),this);
   } else {
      R__b.WriteClassBuffer(g2IntPt::Class(),this);
   }
}

//______________________________________________________________________________
void g2IntPt::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class g2IntPt.
      TClass *R__cl = ::g2IntPt::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "segNum", &segNum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "xyz", &xyz);
      R__insp.InspectMember(xyz, "xyz.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "xyzLab", &xyzLab);
      R__insp.InspectMember(xyzLab, "xyzLab.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "xyzLabSeg", &xyzLabSeg);
      R__insp.InspectMember(xyzLabSeg, "xyzLabSeg.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "xyzLabCrys", &xyzLabCrys);
      R__insp.InspectMember(xyzLabCrys, "xyzLabCrys.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "e", &e);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "segE", &segE);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_g2IntPt(void *p) {
      return  p ? new(p) ::g2IntPt : new ::g2IntPt;
   }
   static void *newArray_g2IntPt(Long_t nElements, void *p) {
      return p ? new(p) ::g2IntPt[nElements] : new ::g2IntPt[nElements];
   }
   // Wrapper around operator delete
   static void delete_g2IntPt(void *p) {
      delete ((::g2IntPt*)p);
   }
   static void deleteArray_g2IntPt(void *p) {
      delete [] ((::g2IntPt*)p);
   }
   static void destruct_g2IntPt(void *p) {
      typedef ::g2IntPt current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::g2IntPt

//______________________________________________________________________________
void g2CrystalEvent::Streamer(TBuffer &R__b)
{
   // Stream an object of class g2CrystalEvent.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(g2CrystalEvent::Class(),this);
   } else {
      R__b.WriteClassBuffer(g2CrystalEvent::Class(),this);
   }
}

//______________________________________________________________________________
void g2CrystalEvent::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class g2CrystalEvent.
      TClass *R__cl = ::g2CrystalEvent::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "crystalID", &crystalID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "crystalNum", &crystalNum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "quadNum", &quadNum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "timestamp", &timestamp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "t0", &t0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "chiSq", &chiSq);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "normChiSq", &normChiSq);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bl", &bl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "error", &error);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cc", &cc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "edop", &edop);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "edop_maxInt", &edop_maxInt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "edopSeg", &edopSeg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "edopXtal", &edopXtal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ccCurrent", &ccCurrent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ccPrior1", &ccPrior1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ccPrior2", &ccPrior2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "deltaT1", &deltaT1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "deltaT2", &deltaT2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cc1", &cc1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cc2", &cc2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cc3", &cc3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cc4", &cc4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "segSum", &segSum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "doppler", &doppler);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dopplerSeg", &dopplerSeg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dopplerSegOffset", &dopplerSegOffset);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dopplerCrystal", &dopplerCrystal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "intpts", (void*)&intpts);
      R__insp.InspectMember("vector<g2IntPt>", (void*)&intpts, "intpts.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "waveAll", (void*)&waveAll);
      R__insp.InspectMember("vector<Short_t>", (void*)&waveAll, "waveAll.", false);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_g2CrystalEvent(void *p) {
      return  p ? new(p) ::g2CrystalEvent : new ::g2CrystalEvent;
   }
   static void *newArray_g2CrystalEvent(Long_t nElements, void *p) {
      return p ? new(p) ::g2CrystalEvent[nElements] : new ::g2CrystalEvent[nElements];
   }
   // Wrapper around operator delete
   static void delete_g2CrystalEvent(void *p) {
      delete ((::g2CrystalEvent*)p);
   }
   static void deleteArray_g2CrystalEvent(void *p) {
      delete [] ((::g2CrystalEvent*)p);
   }
   static void destruct_g2CrystalEvent(void *p) {
      typedef ::g2CrystalEvent current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::g2CrystalEvent

//______________________________________________________________________________
void g2OUT::Streamer(TBuffer &R__b)
{
   // Stream an object of class g2OUT.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(g2OUT::Class(),this);
   } else {
      R__b.WriteClassBuffer(g2OUT::Class(),this);
   }
}

//______________________________________________________________________________
void g2OUT::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class g2OUT.
      TClass *R__cl = ::g2OUT::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "runNumber", &runNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "xtals", (void*)&xtals);
      R__insp.InspectMember("vector<g2CrystalEvent>", (void*)&xtals, "xtals.", false);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_g2OUT(void *p) {
      return  p ? new(p) ::g2OUT : new ::g2OUT;
   }
   static void *newArray_g2OUT(Long_t nElements, void *p) {
      return p ? new(p) ::g2OUT[nElements] : new ::g2OUT[nElements];
   }
   // Wrapper around operator delete
   static void delete_g2OUT(void *p) {
      delete ((::g2OUT*)p);
   }
   static void deleteArray_g2OUT(void *p) {
      delete [] ((::g2OUT*)p);
   }
   static void destruct_g2OUT(void *p) {
      typedef ::g2OUT current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::g2OUT

//______________________________________________________________________________
void goddessOut::Streamer(TBuffer &R__b)
{
   // Stream an object of class goddessOut.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(goddessOut::Class(),this);
   } else {
      R__b.WriteClassBuffer(goddessOut::Class(),this);
   }
}

//______________________________________________________________________________
void goddessOut::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class goddessOut.
      TClass *R__cl = ::goddessOut::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "siID", (void*)&siID);
      R__insp.InspectMember("vector<string>", (void*)&siID, "siID.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "siType", (void*)&siType);
      R__insp.InspectMember("vector<string>", (void*)&siType, "siType.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "si", (void*)&si);
      R__insp.InspectMember("vector<detectorOUT>", (void*)&si, "si.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "icDE", &icDE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "icE", &icE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "icX", &icX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "icY", &icY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tdc0", &tdc0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tdc1", &tdc1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tdc2", &tdc2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tdc3", &tdc3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tdc4", &tdc4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tdc5", &tdc5);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_goddessOut(void *p) {
      return  p ? new(p) ::goddessOut : new ::goddessOut;
   }
   static void *newArray_goddessOut(Long_t nElements, void *p) {
      return p ? new(p) ::goddessOut[nElements] : new ::goddessOut[nElements];
   }
   // Wrapper around operator delete
   static void delete_goddessOut(void *p) {
      delete ((::goddessOut*)p);
   }
   static void deleteArray_goddessOut(void *p) {
      delete [] ((::goddessOut*)p);
   }
   static void destruct_goddessOut(void *p) {
      typedef ::goddessOut current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::goddessOut

//______________________________________________________________________________
void QQQ5::Streamer(TBuffer &R__b)
{
   // Stream an object of class QQQ5.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(QQQ5::Class(),this);
   } else {
      R__b.WriteClassBuffer(QQQ5::Class(),this);
   }
}

//______________________________________________________________________________
void QQQ5::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class QQQ5.
      TClass *R__cl = ::QQQ5::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "firstStripWidth", &firstStripWidth);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "deltaPitch", &deltaPitch);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "stripsP", (void*)&stripsP);
      R__insp.InspectMember("vector<Int_t>", (void*)&stripsP, "stripsP.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eRawP", (void*)&eRawP);
      R__insp.InspectMember("vector<Float_t>", (void*)&eRawP, "eRawP.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eCalP", (void*)&eCalP);
      R__insp.InspectMember("vector<Float_t>", (void*)&eCalP, "eCalP.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "timeP", (void*)&timeP);
      R__insp.InspectMember("vector<uint64_t>", (void*)&timeP, "timeP.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "stripsN", (void*)&stripsN);
      R__insp.InspectMember("vector<Int_t>", (void*)&stripsN, "stripsN.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eRawN", (void*)&eRawN);
      R__insp.InspectMember("vector<Float_t>", (void*)&eRawN, "eRawN.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eCalN", (void*)&eCalN);
      R__insp.InspectMember("vector<Float_t>", (void*)&eCalN, "eCalN.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "timeN", (void*)&timeN);
      R__insp.InspectMember("vector<uint64_t>", (void*)&timeN, "timeN.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pStripEdgePos[33]", pStripEdgePos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nStripEdgePos[5]", nStripEdgePos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pStripCenterPos[32]", pStripCenterPos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nStripCenterPos[4]", nStripCenterPos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "binsP[33]", binsP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "binsPCenter[32]", binsPCenter);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "binsN[5]", binsN);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "binsNCenter[4]", binsNCenter);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "binsRho[33]", binsRho);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "binsAzimuthal[5]", binsAzimuthal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "binsPolar[33]", binsPolar);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "binsPolarCenter[32]", binsPolarCenter);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eventPos", &eventPos);
      R__insp.InspectMember(eventPos, "eventPos.");
      orrubaDet::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_QQQ5(void *p) {
      return  p ? new(p) ::QQQ5 : new ::QQQ5;
   }
   static void *newArray_QQQ5(Long_t nElements, void *p) {
      return p ? new(p) ::QQQ5[nElements] : new ::QQQ5[nElements];
   }
   // Wrapper around operator delete
   static void delete_QQQ5(void *p) {
      delete ((::QQQ5*)p);
   }
   static void deleteArray_QQQ5(void *p) {
      delete [] ((::QQQ5*)p);
   }
   static void destruct_QQQ5(void *p) {
      typedef ::QQQ5 current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::QQQ5

//______________________________________________________________________________
void superX3::Streamer(TBuffer &R__b)
{
   // Stream an object of class superX3.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(superX3::Class(),this);
   } else {
      R__b.WriteClassBuffer(superX3::Class(),this);
   }
}

//______________________________________________________________________________
void superX3::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class superX3.
      TClass *R__cl = ::superX3::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "activeLength", &activeLength);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "activeWidth", &activeWidth);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "stripsP", (void*)&stripsP);
      R__insp.InspectMember("vector<Int_t>", (void*)&stripsP, "stripsP.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eNearRaw", (void*)&eNearRaw);
      R__insp.InspectMember("vector<Float_t>", (void*)&eNearRaw, "eNearRaw.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eFarRaw", (void*)&eFarRaw);
      R__insp.InspectMember("vector<Float_t>", (void*)&eFarRaw, "eFarRaw.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eNearCal", (void*)&eNearCal);
      R__insp.InspectMember("vector<Float_t>", (void*)&eNearCal, "eNearCal.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eFarCal", (void*)&eFarCal);
      R__insp.InspectMember("vector<Float_t>", (void*)&eFarCal, "eFarCal.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "timeNear", (void*)&timeNear);
      R__insp.InspectMember("vector<uint64_t>", (void*)&timeNear, "timeNear.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "timeFar", (void*)&timeFar);
      R__insp.InspectMember("vector<uint64_t>", (void*)&timeFar, "timeFar.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "stripsN", (void*)&stripsN);
      R__insp.InspectMember("vector<Int_t>", (void*)&stripsN, "stripsN.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eRawN", (void*)&eRawN);
      R__insp.InspectMember("vector<Float_t>", (void*)&eRawN, "eRawN.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eCalN", (void*)&eCalN);
      R__insp.InspectMember("vector<Float_t>", (void*)&eCalN, "eCalN.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "timeN", (void*)&timeN);
      R__insp.InspectMember("vector<uint64_t>", (void*)&timeN, "timeN.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pStripEdgePos[5]", pStripEdgePos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nStripEdgePos[5]", nStripEdgePos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pStripCenterPos[4]", pStripCenterPos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nStripCenterPos[4]", nStripCenterPos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eventPos", &eventPos);
      R__insp.InspectMember(eventPos, "eventPos.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "binsP[5]", binsP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "binsPCenter[4]", binsPCenter);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "binsN[5]", binsN);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "binsNCenter[4]", binsNCenter);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "binsZ[5]", binsZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "binsZCenter[4]", binsZCenter);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "binsAzimuthal[5]", binsAzimuthal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "binsAzimuthalCenter[4]", binsAzimuthalCenter);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "binsPolar[5]", binsPolar);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "stripPosRaw", (void*)&stripPosRaw);
      R__insp.InspectMember("orrubaDet::valueMap", (void*)&stripPosRaw, "stripPosRaw.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "stripPosCal", (void*)&stripPosCal);
      R__insp.InspectMember("orrubaDet::valueMap", (void*)&stripPosCal, "stripPosCal.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "stripChannelMult[4]", stripChannelMult);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "parStripPosCal[4]", parStripPosCal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "parStripECal[4]", parStripECal);
      orrubaDet::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_superX3(void *p) {
      return  p ? new(p) ::superX3 : new ::superX3;
   }
   static void *newArray_superX3(Long_t nElements, void *p) {
      return p ? new(p) ::superX3[nElements] : new ::superX3[nElements];
   }
   // Wrapper around operator delete
   static void delete_superX3(void *p) {
      delete ((::superX3*)p);
   }
   static void deleteArray_superX3(void *p) {
      delete [] ((::superX3*)p);
   }
   static void destruct_superX3(void *p) {
      typedef ::superX3 current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::superX3

//______________________________________________________________________________
void ionChamber::Streamer(TBuffer &R__b)
{
   // Stream an object of class ionChamber.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ionChamber::Class(),this);
   } else {
      R__b.WriteClassBuffer(ionChamber::Class(),this);
   }
}

//______________________________________________________________________________
void ionChamber::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ionChamber.
      TClass *R__cl = ::ionChamber::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "numAnode", &numAnode);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "numWireX", &numWireX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "numWireY", &numWireY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "numDE", &numDE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "numEres", &numEres);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "anodeRaw", (void*)&anodeRaw);
      R__insp.InspectMember("ionChamber::valueMap", (void*)&anodeRaw, "anodeRaw.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "anodeCal", (void*)&anodeCal);
      R__insp.InspectMember("ionChamber::valueMap", (void*)&anodeCal, "anodeCal.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "wireX", (void*)&wireX);
      R__insp.InspectMember("ionChamber::valueMap", (void*)&wireX, "wireX.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "wireY", (void*)&wireY);
      R__insp.InspectMember("ionChamber::valueMap", (void*)&wireY, "wireY.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dE", &dE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "resE", &resE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "E", &E);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "parAnodeECal", (void*)&parAnodeECal);
      R__insp.InspectMember("vector<std::vector<Float_t> >", (void*)&parAnodeECal, "parAnodeECal.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "threshAnode", (void*)&threshAnode);
      R__insp.InspectMember("vector<Int_t>", (void*)&threshAnode, "threshAnode.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "threshX", (void*)&threshX);
      R__insp.InspectMember("vector<Int_t>", (void*)&threshX, "threshX.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "threshY", (void*)&threshY);
      R__insp.InspectMember("vector<Int_t>", (void*)&threshY, "threshY.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mapAnode", (void*)&mapAnode);
      R__insp.InspectMember("ionChamber::chMap", (void*)&mapAnode, "mapAnode.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mapX", (void*)&mapX);
      R__insp.InspectMember("ionChamber::chMap", (void*)&mapX, "mapX.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mapY", (void*)&mapY);
      R__insp.InspectMember("ionChamber::chMap", (void*)&mapY, "mapY.", false);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ionChamber(void *p) {
      return  p ? new(p) ::ionChamber : new ::ionChamber;
   }
   static void *newArray_ionChamber(Long_t nElements, void *p) {
      return p ? new(p) ::ionChamber[nElements] : new ::ionChamber[nElements];
   }
   // Wrapper around operator delete
   static void delete_ionChamber(void *p) {
      delete ((::ionChamber*)p);
   }
   static void deleteArray_ionChamber(void *p) {
      delete [] ((::ionChamber*)p);
   }
   static void destruct_ionChamber(void *p) {
      typedef ::ionChamber current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ionChamber

//______________________________________________________________________________
void tdc_t::Streamer(TBuffer &R__b)
{
   // Stream an object of class tdc_t.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(tdc_t::Class(),this);
   } else {
      R__b.WriteClassBuffer(tdc_t::Class(),this);
   }
}

//______________________________________________________________________________
void tdc_t::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class tdc_t.
      TClass *R__cl = ::tdc_t::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "numChannels", &numChannels);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tdc0", &tdc0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tdc1", &tdc1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tdc2", &tdc2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tdc3", &tdc3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tdc4", &tdc4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tdc5", &tdc5);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "threshTDC", (void*)&threshTDC);
      R__insp.InspectMember("vector<Int_t>", (void*)&threshTDC, "threshTDC.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tdcRaw", (void*)&tdcRaw);
      R__insp.InspectMember("tdc_t::valueMap", (void*)&tdcRaw, "tdcRaw.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tdcCal", (void*)&tdcCal);
      R__insp.InspectMember("tdc_t::valueMap", (void*)&tdcCal, "tdcCal.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mapTDC", (void*)&mapTDC);
      R__insp.InspectMember("tdc_t::chMap", (void*)&mapTDC, "mapTDC.", false);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_tdc_t(void *p) {
      return  p ? new(p) ::tdc_t : new ::tdc_t;
   }
   static void *newArray_tdc_t(Long_t nElements, void *p) {
      return p ? new(p) ::tdc_t[nElements] : new ::tdc_t[nElements];
   }
   // Wrapper around operator delete
   static void delete_tdc_t(void *p) {
      delete ((::tdc_t*)p);
   }
   static void deleteArray_tdc_t(void *p) {
      delete [] ((::tdc_t*)p);
   }
   static void destruct_tdc_t(void *p) {
      typedef ::tdc_t current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::tdc_t

//______________________________________________________________________________
void goddessFull::Streamer(TBuffer &R__b)
{
   // Stream an object of class goddessFull.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(goddessFull::Class(),this);
   } else {
      R__b.WriteClassBuffer(goddessFull::Class(),this);
   }
}

//______________________________________________________________________________
void goddessFull::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class goddessFull.
      TClass *R__cl = ::goddessFull::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "buf[2048]", buf);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*rawGoddess", &rawGoddess);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "qqs", (void*)&qqs);
      R__insp.InspectMember("vector<QQQ5>", (void*)&qqs, "qqs.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "s3s", (void*)&s3s);
      R__insp.InspectMember("vector<superX3>", (void*)&s3s, "s3s.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bbs", (void*)&bbs);
      R__insp.InspectMember("vector<BB10>", (void*)&bbs, "bbs.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ics", (void*)&ics);
      R__insp.InspectMember("vector<ionChamber>", (void*)&ics, "ics.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tdcs", (void*)&tdcs);
      R__insp.InspectMember("vector<tdc_t>", (void*)&tdcs, "tdcs.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eventOut", &eventOut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ts", &ts);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "geomInfo", (void*)&geomInfo);
      R__insp.InspectMember("map<string,Double_t>", (void*)&geomInfo, "geomInfo.", false);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_goddessFull(void *p) {
      return  p ? new(p) ::goddessFull : new ::goddessFull;
   }
   static void *newArray_goddessFull(Long_t nElements, void *p) {
      return p ? new(p) ::goddessFull[nElements] : new ::goddessFull[nElements];
   }
   // Wrapper around operator delete
   static void delete_goddessFull(void *p) {
      delete ((::goddessFull*)p);
   }
   static void deleteArray_goddessFull(void *p) {
      delete [] ((::goddessFull*)p);
   }
   static void destruct_goddessFull(void *p) {
      typedef ::goddessFull current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::goddessFull

namespace ROOT {
   void maplEshortcOfloatgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEshortcOfloatgR_Dictionary();
   static void *new_maplEshortcOfloatgR(void *p = 0);
   static void *newArray_maplEshortcOfloatgR(Long_t size, void *p);
   static void delete_maplEshortcOfloatgR(void *p);
   static void deleteArray_maplEshortcOfloatgR(void *p);
   static void destruct_maplEshortcOfloatgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const map<short,float>*)
   {
      map<short,float> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<short,float>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<short,float>", -2, "/usr/local/lib/root/cint/cint/lib/prec_stl/map", 63,
                  typeid(map<short,float>), DefineBehavior(ptr, ptr),
                  0, &maplEshortcOfloatgR_Dictionary, isa_proxy, 0,
                  sizeof(map<short,float>) );
      instance.SetNew(&new_maplEshortcOfloatgR);
      instance.SetNewArray(&newArray_maplEshortcOfloatgR);
      instance.SetDelete(&delete_maplEshortcOfloatgR);
      instance.SetDeleteArray(&deleteArray_maplEshortcOfloatgR);
      instance.SetDestructor(&destruct_maplEshortcOfloatgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::MapInsert< map<short,float> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<short,float>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEshortcOfloatgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const map<short,float>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_maplEshortcOfloatgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<short,float> : new map<short,float>;
   }
   static void *newArray_maplEshortcOfloatgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<short,float>[nElements] : new map<short,float>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEshortcOfloatgR(void *p) {
      delete ((map<short,float>*)p);
   }
   static void deleteArray_maplEshortcOfloatgR(void *p) {
      delete [] ((map<short,float>*)p);
   }
   static void destruct_maplEshortcOfloatgR(void *p) {
      typedef map<short,float> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class map<short,float>

namespace ROOT {
   void maplEshortcOshortgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEshortcOshortgR_Dictionary();
   static void *new_maplEshortcOshortgR(void *p = 0);
   static void *newArray_maplEshortcOshortgR(Long_t size, void *p);
   static void delete_maplEshortcOshortgR(void *p);
   static void deleteArray_maplEshortcOshortgR(void *p);
   static void destruct_maplEshortcOshortgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const map<short,short>*)
   {
      map<short,short> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<short,short>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<short,short>", -2, "/usr/local/lib/root/cint/cint/lib/prec_stl/map", 63,
                  typeid(map<short,short>), DefineBehavior(ptr, ptr),
                  0, &maplEshortcOshortgR_Dictionary, isa_proxy, 0,
                  sizeof(map<short,short>) );
      instance.SetNew(&new_maplEshortcOshortgR);
      instance.SetNewArray(&newArray_maplEshortcOshortgR);
      instance.SetDelete(&delete_maplEshortcOshortgR);
      instance.SetDeleteArray(&deleteArray_maplEshortcOshortgR);
      instance.SetDestructor(&destruct_maplEshortcOshortgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::MapInsert< map<short,short> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<short,short>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEshortcOshortgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const map<short,short>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_maplEshortcOshortgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<short,short> : new map<short,short>;
   }
   static void *newArray_maplEshortcOshortgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<short,short>[nElements] : new map<short,short>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEshortcOshortgR(void *p) {
      delete ((map<short,short>*)p);
   }
   static void deleteArray_maplEshortcOshortgR(void *p) {
      delete [] ((map<short,short>*)p);
   }
   static void destruct_maplEshortcOshortgR(void *p) {
      typedef map<short,short> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class map<short,short>

namespace ROOT {
   void maplEshortcOunsignedsPlonggR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEshortcOunsignedsPlonggR_Dictionary();
   static void *new_maplEshortcOunsignedsPlonggR(void *p = 0);
   static void *newArray_maplEshortcOunsignedsPlonggR(Long_t size, void *p);
   static void delete_maplEshortcOunsignedsPlonggR(void *p);
   static void deleteArray_maplEshortcOunsignedsPlonggR(void *p);
   static void destruct_maplEshortcOunsignedsPlonggR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const map<short,unsigned long>*)
   {
      map<short,unsigned long> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<short,unsigned long>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<short,unsigned long>", -2, "/usr/local/lib/root/cint/cint/lib/prec_stl/map", 63,
                  typeid(map<short,unsigned long>), DefineBehavior(ptr, ptr),
                  0, &maplEshortcOunsignedsPlonggR_Dictionary, isa_proxy, 0,
                  sizeof(map<short,unsigned long>) );
      instance.SetNew(&new_maplEshortcOunsignedsPlonggR);
      instance.SetNewArray(&newArray_maplEshortcOunsignedsPlonggR);
      instance.SetDelete(&delete_maplEshortcOunsignedsPlonggR);
      instance.SetDeleteArray(&deleteArray_maplEshortcOunsignedsPlonggR);
      instance.SetDestructor(&destruct_maplEshortcOunsignedsPlonggR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::MapInsert< map<short,unsigned long> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<short,unsigned long>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEshortcOunsignedsPlonggR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const map<short,unsigned long>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_maplEshortcOunsignedsPlonggR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<short,unsigned long> : new map<short,unsigned long>;
   }
   static void *newArray_maplEshortcOunsignedsPlonggR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<short,unsigned long>[nElements] : new map<short,unsigned long>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEshortcOunsignedsPlonggR(void *p) {
      delete ((map<short,unsigned long>*)p);
   }
   static void deleteArray_maplEshortcOunsignedsPlonggR(void *p) {
      delete [] ((map<short,unsigned long>*)p);
   }
   static void destruct_maplEshortcOunsignedsPlonggR(void *p) {
      typedef map<short,unsigned long> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class map<short,unsigned long>

namespace ROOT {
   void maplEstringcOdoublegR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEstringcOdoublegR_Dictionary();
   static void *new_maplEstringcOdoublegR(void *p = 0);
   static void *newArray_maplEstringcOdoublegR(Long_t size, void *p);
   static void delete_maplEstringcOdoublegR(void *p);
   static void deleteArray_maplEstringcOdoublegR(void *p);
   static void destruct_maplEstringcOdoublegR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const map<string,double>*)
   {
      map<string,double> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<string,double>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<string,double>", -2, "map.dll", 0,
                  typeid(map<string,double>), DefineBehavior(ptr, ptr),
                  0, &maplEstringcOdoublegR_Dictionary, isa_proxy, 0,
                  sizeof(map<string,double>) );
      instance.SetNew(&new_maplEstringcOdoublegR);
      instance.SetNewArray(&newArray_maplEstringcOdoublegR);
      instance.SetDelete(&delete_maplEstringcOdoublegR);
      instance.SetDeleteArray(&deleteArray_maplEstringcOdoublegR);
      instance.SetDestructor(&destruct_maplEstringcOdoublegR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::MapInsert< map<string,double> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<string,double>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEstringcOdoublegR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const map<string,double>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_maplEstringcOdoublegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,double> : new map<string,double>;
   }
   static void *newArray_maplEstringcOdoublegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,double>[nElements] : new map<string,double>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEstringcOdoublegR(void *p) {
      delete ((map<string,double>*)p);
   }
   static void deleteArray_maplEstringcOdoublegR(void *p) {
      delete [] ((map<string,double>*)p);
   }
   static void destruct_maplEstringcOdoublegR(void *p) {
      typedef map<string,double> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class map<string,double>

namespace ROOT {
   void vectorlEBB10gR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEBB10gR_Dictionary();
   static void *new_vectorlEBB10gR(void *p = 0);
   static void *newArray_vectorlEBB10gR(Long_t size, void *p);
   static void delete_vectorlEBB10gR(void *p);
   static void deleteArray_vectorlEBB10gR(void *p);
   static void destruct_vectorlEBB10gR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<BB10>*)
   {
      vector<BB10> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<BB10>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<BB10>", -2, "/usr/local/lib/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<BB10>), DefineBehavior(ptr, ptr),
                  0, &vectorlEBB10gR_Dictionary, isa_proxy, 0,
                  sizeof(vector<BB10>) );
      instance.SetNew(&new_vectorlEBB10gR);
      instance.SetNewArray(&newArray_vectorlEBB10gR);
      instance.SetDelete(&delete_vectorlEBB10gR);
      instance.SetDeleteArray(&deleteArray_vectorlEBB10gR);
      instance.SetDestructor(&destruct_vectorlEBB10gR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<BB10> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<BB10>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEBB10gR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<BB10>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEBB10gR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<BB10> : new vector<BB10>;
   }
   static void *newArray_vectorlEBB10gR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<BB10>[nElements] : new vector<BB10>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEBB10gR(void *p) {
      delete ((vector<BB10>*)p);
   }
   static void deleteArray_vectorlEBB10gR(void *p) {
      delete [] ((vector<BB10>*)p);
   }
   static void destruct_vectorlEBB10gR(void *p) {
      typedef vector<BB10> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<BB10>

namespace ROOT {
   void vectorlEQQQ5gR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEQQQ5gR_Dictionary();
   static void *new_vectorlEQQQ5gR(void *p = 0);
   static void *newArray_vectorlEQQQ5gR(Long_t size, void *p);
   static void delete_vectorlEQQQ5gR(void *p);
   static void deleteArray_vectorlEQQQ5gR(void *p);
   static void destruct_vectorlEQQQ5gR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<QQQ5>*)
   {
      vector<QQQ5> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<QQQ5>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<QQQ5>", -2, "/usr/local/lib/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<QQQ5>), DefineBehavior(ptr, ptr),
                  0, &vectorlEQQQ5gR_Dictionary, isa_proxy, 0,
                  sizeof(vector<QQQ5>) );
      instance.SetNew(&new_vectorlEQQQ5gR);
      instance.SetNewArray(&newArray_vectorlEQQQ5gR);
      instance.SetDelete(&delete_vectorlEQQQ5gR);
      instance.SetDeleteArray(&deleteArray_vectorlEQQQ5gR);
      instance.SetDestructor(&destruct_vectorlEQQQ5gR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<QQQ5> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<QQQ5>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEQQQ5gR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<QQQ5>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEQQQ5gR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<QQQ5> : new vector<QQQ5>;
   }
   static void *newArray_vectorlEQQQ5gR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<QQQ5>[nElements] : new vector<QQQ5>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEQQQ5gR(void *p) {
      delete ((vector<QQQ5>*)p);
   }
   static void deleteArray_vectorlEQQQ5gR(void *p) {
      delete [] ((vector<QQQ5>*)p);
   }
   static void destruct_vectorlEQQQ5gR(void *p) {
      typedef vector<QQQ5> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<QQQ5>

namespace ROOT {
   void vectorlEdetectorOUTgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEdetectorOUTgR_Dictionary();
   static void *new_vectorlEdetectorOUTgR(void *p = 0);
   static void *newArray_vectorlEdetectorOUTgR(Long_t size, void *p);
   static void delete_vectorlEdetectorOUTgR(void *p);
   static void deleteArray_vectorlEdetectorOUTgR(void *p);
   static void destruct_vectorlEdetectorOUTgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<detectorOUT>*)
   {
      vector<detectorOUT> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<detectorOUT>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<detectorOUT>", -2, "/usr/local/lib/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<detectorOUT>), DefineBehavior(ptr, ptr),
                  0, &vectorlEdetectorOUTgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<detectorOUT>) );
      instance.SetNew(&new_vectorlEdetectorOUTgR);
      instance.SetNewArray(&newArray_vectorlEdetectorOUTgR);
      instance.SetDelete(&delete_vectorlEdetectorOUTgR);
      instance.SetDeleteArray(&deleteArray_vectorlEdetectorOUTgR);
      instance.SetDestructor(&destruct_vectorlEdetectorOUTgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<detectorOUT> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<detectorOUT>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEdetectorOUTgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<detectorOUT>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEdetectorOUTgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<detectorOUT> : new vector<detectorOUT>;
   }
   static void *newArray_vectorlEdetectorOUTgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<detectorOUT>[nElements] : new vector<detectorOUT>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEdetectorOUTgR(void *p) {
      delete ((vector<detectorOUT>*)p);
   }
   static void deleteArray_vectorlEdetectorOUTgR(void *p) {
      delete [] ((vector<detectorOUT>*)p);
   }
   static void destruct_vectorlEdetectorOUTgR(void *p) {
      typedef vector<detectorOUT> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<detectorOUT>

namespace ROOT {
   void vectorlEfloatgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEfloatgR_Dictionary();
   static void *new_vectorlEfloatgR(void *p = 0);
   static void *newArray_vectorlEfloatgR(Long_t size, void *p);
   static void delete_vectorlEfloatgR(void *p);
   static void deleteArray_vectorlEfloatgR(void *p);
   static void destruct_vectorlEfloatgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<float>*)
   {
      vector<float> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<float>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<float>", -2, "vector.dll", 0,
                  typeid(vector<float>), DefineBehavior(ptr, ptr),
                  0, &vectorlEfloatgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<float>) );
      instance.SetNew(&new_vectorlEfloatgR);
      instance.SetNewArray(&newArray_vectorlEfloatgR);
      instance.SetDelete(&delete_vectorlEfloatgR);
      instance.SetDeleteArray(&deleteArray_vectorlEfloatgR);
      instance.SetDestructor(&destruct_vectorlEfloatgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<float> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<float>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEfloatgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<float>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEfloatgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<float> : new vector<float>;
   }
   static void *newArray_vectorlEfloatgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<float>[nElements] : new vector<float>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEfloatgR(void *p) {
      delete ((vector<float>*)p);
   }
   static void deleteArray_vectorlEfloatgR(void *p) {
      delete [] ((vector<float>*)p);
   }
   static void destruct_vectorlEfloatgR(void *p) {
      typedef vector<float> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<float>

namespace ROOT {
   void vectorlEg2CrystalEventgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEg2CrystalEventgR_Dictionary();
   static void *new_vectorlEg2CrystalEventgR(void *p = 0);
   static void *newArray_vectorlEg2CrystalEventgR(Long_t size, void *p);
   static void delete_vectorlEg2CrystalEventgR(void *p);
   static void deleteArray_vectorlEg2CrystalEventgR(void *p);
   static void destruct_vectorlEg2CrystalEventgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<g2CrystalEvent>*)
   {
      vector<g2CrystalEvent> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<g2CrystalEvent>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<g2CrystalEvent>", -2, "/usr/local/lib/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<g2CrystalEvent>), DefineBehavior(ptr, ptr),
                  0, &vectorlEg2CrystalEventgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<g2CrystalEvent>) );
      instance.SetNew(&new_vectorlEg2CrystalEventgR);
      instance.SetNewArray(&newArray_vectorlEg2CrystalEventgR);
      instance.SetDelete(&delete_vectorlEg2CrystalEventgR);
      instance.SetDeleteArray(&deleteArray_vectorlEg2CrystalEventgR);
      instance.SetDestructor(&destruct_vectorlEg2CrystalEventgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<g2CrystalEvent> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<g2CrystalEvent>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEg2CrystalEventgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<g2CrystalEvent>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEg2CrystalEventgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<g2CrystalEvent> : new vector<g2CrystalEvent>;
   }
   static void *newArray_vectorlEg2CrystalEventgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<g2CrystalEvent>[nElements] : new vector<g2CrystalEvent>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEg2CrystalEventgR(void *p) {
      delete ((vector<g2CrystalEvent>*)p);
   }
   static void deleteArray_vectorlEg2CrystalEventgR(void *p) {
      delete [] ((vector<g2CrystalEvent>*)p);
   }
   static void destruct_vectorlEg2CrystalEventgR(void *p) {
      typedef vector<g2CrystalEvent> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<g2CrystalEvent>

namespace ROOT {
   void vectorlEg2IntPtgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEg2IntPtgR_Dictionary();
   static void *new_vectorlEg2IntPtgR(void *p = 0);
   static void *newArray_vectorlEg2IntPtgR(Long_t size, void *p);
   static void delete_vectorlEg2IntPtgR(void *p);
   static void deleteArray_vectorlEg2IntPtgR(void *p);
   static void destruct_vectorlEg2IntPtgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<g2IntPt>*)
   {
      vector<g2IntPt> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<g2IntPt>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<g2IntPt>", -2, "/usr/local/lib/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<g2IntPt>), DefineBehavior(ptr, ptr),
                  0, &vectorlEg2IntPtgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<g2IntPt>) );
      instance.SetNew(&new_vectorlEg2IntPtgR);
      instance.SetNewArray(&newArray_vectorlEg2IntPtgR);
      instance.SetDelete(&delete_vectorlEg2IntPtgR);
      instance.SetDeleteArray(&deleteArray_vectorlEg2IntPtgR);
      instance.SetDestructor(&destruct_vectorlEg2IntPtgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<g2IntPt> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<g2IntPt>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEg2IntPtgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<g2IntPt>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEg2IntPtgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<g2IntPt> : new vector<g2IntPt>;
   }
   static void *newArray_vectorlEg2IntPtgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<g2IntPt>[nElements] : new vector<g2IntPt>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEg2IntPtgR(void *p) {
      delete ((vector<g2IntPt>*)p);
   }
   static void deleteArray_vectorlEg2IntPtgR(void *p) {
      delete [] ((vector<g2IntPt>*)p);
   }
   static void destruct_vectorlEg2IntPtgR(void *p) {
      typedef vector<g2IntPt> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<g2IntPt>

namespace ROOT {
   void vectorlEintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEintgR_Dictionary();
   static void *new_vectorlEintgR(void *p = 0);
   static void *newArray_vectorlEintgR(Long_t size, void *p);
   static void delete_vectorlEintgR(void *p);
   static void deleteArray_vectorlEintgR(void *p);
   static void destruct_vectorlEintgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<int>*)
   {
      vector<int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<int>", -2, "/usr/local/lib/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<int>), DefineBehavior(ptr, ptr),
                  0, &vectorlEintgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<int>) );
      instance.SetNew(&new_vectorlEintgR);
      instance.SetNewArray(&newArray_vectorlEintgR);
      instance.SetDelete(&delete_vectorlEintgR);
      instance.SetDeleteArray(&deleteArray_vectorlEintgR);
      instance.SetDestructor(&destruct_vectorlEintgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEintgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<int>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int> : new vector<int>;
   }
   static void *newArray_vectorlEintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int>[nElements] : new vector<int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEintgR(void *p) {
      delete ((vector<int>*)p);
   }
   static void deleteArray_vectorlEintgR(void *p) {
      delete [] ((vector<int>*)p);
   }
   static void destruct_vectorlEintgR(void *p) {
      typedef vector<int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<int>

namespace ROOT {
   void vectorlEionChambergR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEionChambergR_Dictionary();
   static void *new_vectorlEionChambergR(void *p = 0);
   static void *newArray_vectorlEionChambergR(Long_t size, void *p);
   static void delete_vectorlEionChambergR(void *p);
   static void deleteArray_vectorlEionChambergR(void *p);
   static void destruct_vectorlEionChambergR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<ionChamber>*)
   {
      vector<ionChamber> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<ionChamber>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<ionChamber>", -2, "/usr/local/lib/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<ionChamber>), DefineBehavior(ptr, ptr),
                  0, &vectorlEionChambergR_Dictionary, isa_proxy, 0,
                  sizeof(vector<ionChamber>) );
      instance.SetNew(&new_vectorlEionChambergR);
      instance.SetNewArray(&newArray_vectorlEionChambergR);
      instance.SetDelete(&delete_vectorlEionChambergR);
      instance.SetDeleteArray(&deleteArray_vectorlEionChambergR);
      instance.SetDestructor(&destruct_vectorlEionChambergR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<ionChamber> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<ionChamber>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEionChambergR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<ionChamber>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEionChambergR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<ionChamber> : new vector<ionChamber>;
   }
   static void *newArray_vectorlEionChambergR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<ionChamber>[nElements] : new vector<ionChamber>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEionChambergR(void *p) {
      delete ((vector<ionChamber>*)p);
   }
   static void deleteArray_vectorlEionChambergR(void *p) {
      delete [] ((vector<ionChamber>*)p);
   }
   static void destruct_vectorlEionChambergR(void *p) {
      typedef vector<ionChamber> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<ionChamber>

namespace ROOT {
   void vectorlEshortgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEshortgR_Dictionary();
   static void *new_vectorlEshortgR(void *p = 0);
   static void *newArray_vectorlEshortgR(Long_t size, void *p);
   static void delete_vectorlEshortgR(void *p);
   static void deleteArray_vectorlEshortgR(void *p);
   static void destruct_vectorlEshortgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<short>*)
   {
      vector<short> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<short>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<short>", -2, "vector.dll", 0,
                  typeid(vector<short>), DefineBehavior(ptr, ptr),
                  0, &vectorlEshortgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<short>) );
      instance.SetNew(&new_vectorlEshortgR);
      instance.SetNewArray(&newArray_vectorlEshortgR);
      instance.SetDelete(&delete_vectorlEshortgR);
      instance.SetDeleteArray(&deleteArray_vectorlEshortgR);
      instance.SetDestructor(&destruct_vectorlEshortgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<short> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<short>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEshortgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<short>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEshortgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<short> : new vector<short>;
   }
   static void *newArray_vectorlEshortgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<short>[nElements] : new vector<short>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEshortgR(void *p) {
      delete ((vector<short>*)p);
   }
   static void deleteArray_vectorlEshortgR(void *p) {
      delete [] ((vector<short>*)p);
   }
   static void destruct_vectorlEshortgR(void *p) {
      typedef vector<short> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<short>

namespace ROOT {
   void vectorlEstringgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEstringgR_Dictionary();
   static void *new_vectorlEstringgR(void *p = 0);
   static void *newArray_vectorlEstringgR(Long_t size, void *p);
   static void delete_vectorlEstringgR(void *p);
   static void deleteArray_vectorlEstringgR(void *p);
   static void destruct_vectorlEstringgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<string>*)
   {
      vector<string> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<string>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<string>", -2, "/usr/local/lib/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<string>), DefineBehavior(ptr, ptr),
                  0, &vectorlEstringgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<string>) );
      instance.SetNew(&new_vectorlEstringgR);
      instance.SetNewArray(&newArray_vectorlEstringgR);
      instance.SetDelete(&delete_vectorlEstringgR);
      instance.SetDeleteArray(&deleteArray_vectorlEstringgR);
      instance.SetDestructor(&destruct_vectorlEstringgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<string> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<string>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEstringgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<string>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEstringgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<string> : new vector<string>;
   }
   static void *newArray_vectorlEstringgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<string>[nElements] : new vector<string>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEstringgR(void *p) {
      delete ((vector<string>*)p);
   }
   static void deleteArray_vectorlEstringgR(void *p) {
      delete [] ((vector<string>*)p);
   }
   static void destruct_vectorlEstringgR(void *p) {
      typedef vector<string> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<string>

namespace ROOT {
   void vectorlEsuperX3gR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEsuperX3gR_Dictionary();
   static void *new_vectorlEsuperX3gR(void *p = 0);
   static void *newArray_vectorlEsuperX3gR(Long_t size, void *p);
   static void delete_vectorlEsuperX3gR(void *p);
   static void deleteArray_vectorlEsuperX3gR(void *p);
   static void destruct_vectorlEsuperX3gR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<superX3>*)
   {
      vector<superX3> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<superX3>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<superX3>", -2, "/usr/local/lib/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<superX3>), DefineBehavior(ptr, ptr),
                  0, &vectorlEsuperX3gR_Dictionary, isa_proxy, 0,
                  sizeof(vector<superX3>) );
      instance.SetNew(&new_vectorlEsuperX3gR);
      instance.SetNewArray(&newArray_vectorlEsuperX3gR);
      instance.SetDelete(&delete_vectorlEsuperX3gR);
      instance.SetDeleteArray(&deleteArray_vectorlEsuperX3gR);
      instance.SetDestructor(&destruct_vectorlEsuperX3gR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<superX3> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<superX3>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEsuperX3gR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<superX3>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEsuperX3gR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<superX3> : new vector<superX3>;
   }
   static void *newArray_vectorlEsuperX3gR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<superX3>[nElements] : new vector<superX3>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEsuperX3gR(void *p) {
      delete ((vector<superX3>*)p);
   }
   static void deleteArray_vectorlEsuperX3gR(void *p) {
      delete [] ((vector<superX3>*)p);
   }
   static void destruct_vectorlEsuperX3gR(void *p) {
      typedef vector<superX3> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<superX3>

namespace ROOT {
   void vectorlEtdc_tgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEtdc_tgR_Dictionary();
   static void *new_vectorlEtdc_tgR(void *p = 0);
   static void *newArray_vectorlEtdc_tgR(Long_t size, void *p);
   static void delete_vectorlEtdc_tgR(void *p);
   static void deleteArray_vectorlEtdc_tgR(void *p);
   static void destruct_vectorlEtdc_tgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<tdc_t>*)
   {
      vector<tdc_t> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<tdc_t>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<tdc_t>", -2, "/usr/local/lib/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<tdc_t>), DefineBehavior(ptr, ptr),
                  0, &vectorlEtdc_tgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<tdc_t>) );
      instance.SetNew(&new_vectorlEtdc_tgR);
      instance.SetNewArray(&newArray_vectorlEtdc_tgR);
      instance.SetDelete(&delete_vectorlEtdc_tgR);
      instance.SetDeleteArray(&deleteArray_vectorlEtdc_tgR);
      instance.SetDestructor(&destruct_vectorlEtdc_tgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<tdc_t> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<tdc_t>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEtdc_tgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<tdc_t>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEtdc_tgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<tdc_t> : new vector<tdc_t>;
   }
   static void *newArray_vectorlEtdc_tgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<tdc_t>[nElements] : new vector<tdc_t>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEtdc_tgR(void *p) {
      delete ((vector<tdc_t>*)p);
   }
   static void deleteArray_vectorlEtdc_tgR(void *p) {
      delete [] ((vector<tdc_t>*)p);
   }
   static void destruct_vectorlEtdc_tgR(void *p) {
      typedef vector<tdc_t> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<tdc_t>

namespace ROOT {
   void vectorlEunsignedsPlonggR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEunsignedsPlonggR_Dictionary();
   static void *new_vectorlEunsignedsPlonggR(void *p = 0);
   static void *newArray_vectorlEunsignedsPlonggR(Long_t size, void *p);
   static void delete_vectorlEunsignedsPlonggR(void *p);
   static void deleteArray_vectorlEunsignedsPlonggR(void *p);
   static void destruct_vectorlEunsignedsPlonggR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<unsigned long>*)
   {
      vector<unsigned long> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<unsigned long>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<unsigned long>", -2, "vector.dll", 0,
                  typeid(vector<unsigned long>), DefineBehavior(ptr, ptr),
                  0, &vectorlEunsignedsPlonggR_Dictionary, isa_proxy, 0,
                  sizeof(vector<unsigned long>) );
      instance.SetNew(&new_vectorlEunsignedsPlonggR);
      instance.SetNewArray(&newArray_vectorlEunsignedsPlonggR);
      instance.SetDelete(&delete_vectorlEunsignedsPlonggR);
      instance.SetDeleteArray(&deleteArray_vectorlEunsignedsPlonggR);
      instance.SetDestructor(&destruct_vectorlEunsignedsPlonggR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<unsigned long> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<unsigned long>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEunsignedsPlonggR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<unsigned long>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEunsignedsPlonggR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<unsigned long> : new vector<unsigned long>;
   }
   static void *newArray_vectorlEunsignedsPlonggR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<unsigned long>[nElements] : new vector<unsigned long>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEunsignedsPlonggR(void *p) {
      delete ((vector<unsigned long>*)p);
   }
   static void deleteArray_vectorlEunsignedsPlonggR(void *p) {
      delete [] ((vector<unsigned long>*)p);
   }
   static void destruct_vectorlEunsignedsPlonggR(void *p) {
      typedef vector<unsigned long> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<unsigned long>

namespace ROOT {
   void vectorlEunsignedsPshortgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEunsignedsPshortgR_Dictionary();
   static void *new_vectorlEunsignedsPshortgR(void *p = 0);
   static void *newArray_vectorlEunsignedsPshortgR(Long_t size, void *p);
   static void delete_vectorlEunsignedsPshortgR(void *p);
   static void deleteArray_vectorlEunsignedsPshortgR(void *p);
   static void destruct_vectorlEunsignedsPshortgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<unsigned short>*)
   {
      vector<unsigned short> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<unsigned short>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<unsigned short>", -2, "vector.dll", 0,
                  typeid(vector<unsigned short>), DefineBehavior(ptr, ptr),
                  0, &vectorlEunsignedsPshortgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<unsigned short>) );
      instance.SetNew(&new_vectorlEunsignedsPshortgR);
      instance.SetNewArray(&newArray_vectorlEunsignedsPshortgR);
      instance.SetDelete(&delete_vectorlEunsignedsPshortgR);
      instance.SetDeleteArray(&deleteArray_vectorlEunsignedsPshortgR);
      instance.SetDestructor(&destruct_vectorlEunsignedsPshortgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<unsigned short> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<unsigned short>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEunsignedsPshortgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<unsigned short>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEunsignedsPshortgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<unsigned short> : new vector<unsigned short>;
   }
   static void *newArray_vectorlEunsignedsPshortgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<unsigned short>[nElements] : new vector<unsigned short>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEunsignedsPshortgR(void *p) {
      delete ((vector<unsigned short>*)p);
   }
   static void deleteArray_vectorlEunsignedsPshortgR(void *p) {
      delete [] ((vector<unsigned short>*)p);
   }
   static void destruct_vectorlEunsignedsPshortgR(void *p) {
      typedef vector<unsigned short> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<unsigned short>

namespace ROOT {
   void vectorlEvectorlEfloatgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEvectorlEfloatgRsPgR_Dictionary();
   static void *new_vectorlEvectorlEfloatgRsPgR(void *p = 0);
   static void *newArray_vectorlEvectorlEfloatgRsPgR(Long_t size, void *p);
   static void delete_vectorlEvectorlEfloatgRsPgR(void *p);
   static void deleteArray_vectorlEvectorlEfloatgRsPgR(void *p);
   static void destruct_vectorlEvectorlEfloatgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<vector<float> >*)
   {
      vector<vector<float> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<vector<float> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<vector<float> >", -2, "/usr/local/lib/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<vector<float> >), DefineBehavior(ptr, ptr),
                  0, &vectorlEvectorlEfloatgRsPgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<vector<float> >) );
      instance.SetNew(&new_vectorlEvectorlEfloatgRsPgR);
      instance.SetNewArray(&newArray_vectorlEvectorlEfloatgRsPgR);
      instance.SetDelete(&delete_vectorlEvectorlEfloatgRsPgR);
      instance.SetDeleteArray(&deleteArray_vectorlEvectorlEfloatgRsPgR);
      instance.SetDestructor(&destruct_vectorlEvectorlEfloatgRsPgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<vector<float> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<vector<float> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEvectorlEfloatgRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<vector<float> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEvectorlEfloatgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<float> > : new vector<vector<float> >;
   }
   static void *newArray_vectorlEvectorlEfloatgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<float> >[nElements] : new vector<vector<float> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEvectorlEfloatgRsPgR(void *p) {
      delete ((vector<vector<float> >*)p);
   }
   static void deleteArray_vectorlEvectorlEfloatgRsPgR(void *p) {
      delete [] ((vector<vector<float> >*)p);
   }
   static void destruct_vectorlEvectorlEfloatgRsPgR(void *p) {
      typedef vector<vector<float> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<vector<float> >

/********************************************************
* bin/DictOutput.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableDictOutput();

extern "C" void G__set_cpp_environmentDictOutput() {
  G__cpp_reset_tagtableDictOutput();
}
#include <new>
extern "C" int G__cpp_dllrevDictOutput() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* solidVector */
static int G__DictOutput_455_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   solidVector* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new solidVector(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]));
     } else {
       p = new((void*) gvp) solidVector(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new solidVector(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
     } else {
       p = new((void*) gvp) solidVector(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new solidVector(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
     } else {
       p = new((void*) gvp) solidVector(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new solidVector((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
     } else {
       p = new((void*) gvp) solidVector((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new solidVector((Double_t) G__double(libp->para[0]));
     } else {
       p = new((void*) gvp) solidVector((Double_t) G__double(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new solidVector[n];
       } else {
         p = new((void*) gvp) solidVector[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new solidVector;
       } else {
         p = new((void*) gvp) solidVector;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictOutputLN_solidVector));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_455_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((solidVector*) G__getstructoffset())->GetRotZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_455_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((solidVector*) G__getstructoffset())->GetRotPhi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_455_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((solidVector*) G__getstructoffset())->SetRotationZ((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_455_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((solidVector*) G__getstructoffset())->SetRotationPhi((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_455_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TVector3* pobj;
         TVector3 xobj = ((solidVector*) G__getstructoffset())->GetTVector3();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_455_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) solidVector::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_455_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) solidVector::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_455_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) solidVector::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_455_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      solidVector::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_455_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((solidVector*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_455_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) solidVector::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_455_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) solidVector::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_455_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) solidVector::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_455_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) solidVector::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__DictOutput_455_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   solidVector* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new solidVector(*(solidVector*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictOutputLN_solidVector));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef solidVector G__TsolidVector;
static int G__DictOutput_455_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (solidVector*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((solidVector*) (soff+(sizeof(solidVector)*i)))->~G__TsolidVector();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (solidVector*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((solidVector*) (soff))->~G__TsolidVector();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__DictOutput_455_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   solidVector* dest = (solidVector*) G__getstructoffset();
   *dest = *(solidVector*) libp->para[0].ref;
   const solidVector& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* goddessEvent */
// automatic default constructor
static int G__DictOutput_456_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   goddessEvent *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new goddessEvent[n];
     } else {
       p = new((void*) gvp) goddessEvent[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new goddessEvent;
     } else {
       p = new((void*) gvp) goddessEvent;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictOutputLN_goddessEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__DictOutput_456_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   goddessEvent* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new goddessEvent(*(goddessEvent*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictOutputLN_goddessEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef goddessEvent G__TgoddessEvent;
static int G__DictOutput_456_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (goddessEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((goddessEvent*) (soff+(sizeof(goddessEvent)*i)))->~G__TgoddessEvent();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (goddessEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((goddessEvent*) (soff))->~G__TgoddessEvent();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__DictOutput_456_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   goddessEvent* dest = (goddessEvent*) G__getstructoffset();
   *dest = *(goddessEvent*) libp->para[0].ref;
   const goddessEvent& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* orrubaDet */
static int G__DictOutput_457_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((orrubaDet*) G__getstructoffset())->Clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_457_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = ((orrubaDet*) G__getstructoffset())->GetSerialNum();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_457_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = ((orrubaDet*) G__getstructoffset())->GetPosID();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_457_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((orrubaDet*) G__getstructoffset())->GetSector());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_457_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((orrubaDet*) G__getstructoffset())->GetDepth());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_457_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((orrubaDet*) G__getstructoffset())->GetUpStream());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_457_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((orrubaDet*) G__getstructoffset())->SetDetector(*((string*) G__int(libp->para[0])), (UShort_t) G__int(libp->para[1])
, (UShort_t) G__int(libp->para[2]), (Bool_t) G__int(libp->para[3])
, *((solidVector*) G__int(libp->para[4])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_457_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((orrubaDet*) G__getstructoffset())->SetChannelMap(*((map<Short_t,Short_t>*) G__int(libp->para[0])), (Bool_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_457_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<Short_t,Short_t>* pobj;
         map<Short_t,Short_t> xobj = ((orrubaDet*) G__getstructoffset())->GetChannelMap((Bool_t) G__int(libp->para[0]));
         pobj = new map<Short_t,Short_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_457_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((orrubaDet*) G__getstructoffset())->SetNumChannels((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((orrubaDet*) G__getstructoffset())->SetNumChannels((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_457_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((orrubaDet*) G__getstructoffset())->GetNumChannels((Bool_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_457_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((orrubaDet*) G__getstructoffset())->ValidChannel((UInt_t) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_457_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((orrubaDet*) G__getstructoffset())->ChannelHit((UInt_t) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_457_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((orrubaDet*) G__getstructoffset())->LoadEvent((goddessEvent*) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_457_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((orrubaDet*) G__getstructoffset())->SetRawEValue((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_457_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((orrubaDet*) G__getstructoffset())->SetRawEValue((UInt_t) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_457_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((orrubaDet*) G__getstructoffset())->GetRawEValue((UInt_t) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_457_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((orrubaDet*) G__getstructoffset())->GetCalEValue((UInt_t) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_457_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         orrubaDet::valueMap* pobj;
         orrubaDet::valueMap xobj = ((orrubaDet*) G__getstructoffset())->GetRawE((Bool_t) G__int(libp->para[0]));
         pobj = new orrubaDet::valueMap(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_457_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         orrubaDet::valueMap* pobj;
         orrubaDet::valueMap xobj = ((orrubaDet*) G__getstructoffset())->GetCalE((Bool_t) G__int(libp->para[0]));
         pobj = new orrubaDet::valueMap(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_457_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((orrubaDet*) G__getstructoffset())->SetTimestamp((UInt_t) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1])
, (uint64_t) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_457_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((orrubaDet*) G__getstructoffset())->GetTimestamp((UInt_t) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_457_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         orrubaDet::timeMap* pobj;
         orrubaDet::timeMap xobj = ((orrubaDet*) G__getstructoffset())->GetTSmap((Bool_t) G__int(libp->para[0]));
         pobj = new orrubaDet::timeMap(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_457_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((orrubaDet*) G__getstructoffset())->SetECalParameters(*((vector<Float_t>*) G__int(libp->para[0])), (Int_t) G__int(libp->para[1])
, (Bool_t) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_457_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<std::vector<Float_t> >* pobj;
         vector<std::vector<Float_t> > xobj = ((orrubaDet*) G__getstructoffset())->GetECalParameters((Bool_t) G__int(libp->para[0]));
         pobj = new vector<std::vector<Float_t> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_457_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((orrubaDet*) G__getstructoffset())->SetThresholds(*((vector<Int_t>*) G__int(libp->para[0])), (Bool_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_457_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Int_t>* pobj;
         vector<Int_t> xobj = ((orrubaDet*) G__getstructoffset())->GetThresholds((Bool_t) G__int(libp->para[0]));
         pobj = new vector<Int_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_457_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((orrubaDet*) G__getstructoffset())->SortAndCalibrate((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((orrubaDet*) G__getstructoffset())->SortAndCalibrate();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_457_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      {
         TVector3* pobj;
         TVector3 xobj = ((orrubaDet*) G__getstructoffset())->GetEventPosition((Bool_t) G__int(libp->para[0]));
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 0:
      {
         TVector3* pobj;
         TVector3 xobj = ((orrubaDet*) G__getstructoffset())->GetEventPosition();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_457_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      ((orrubaDet*) G__getstructoffset())->GetMaxHitInfo((Int_t*) G__int(libp->para[0]), (uint64_t*) G__int(libp->para[1])
, (Int_t*) G__int(libp->para[2]), (uint64_t*) G__int(libp->para[3])
, (Bool_t) G__int(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      ((orrubaDet*) G__getstructoffset())->GetMaxHitInfo((Int_t*) G__int(libp->para[0]), (uint64_t*) G__int(libp->para[1])
, (Int_t*) G__int(libp->para[2]), (uint64_t*) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_457_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((orrubaDet*) G__getstructoffset())->GetChannelMult((Bool_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((orrubaDet*) G__getstructoffset())->GetChannelMult());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_457_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((orrubaDet*) G__getstructoffset())->GetChannelMult((Bool_t) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_457_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letdouble(result7, 102, (double) ((orrubaDet*) G__getstructoffset())->GetESum((Bool_t) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 102, (double) ((orrubaDet*) G__getstructoffset())->GetESum((Bool_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 102, (double) ((orrubaDet*) G__getstructoffset())->GetESum());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_457_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) orrubaDet::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_457_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) orrubaDet::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_457_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) orrubaDet::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_457_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      orrubaDet::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_457_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((orrubaDet*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_457_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) orrubaDet::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_457_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) orrubaDet::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_457_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) orrubaDet::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_457_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) orrubaDet::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef orrubaDet G__TorrubaDet;
static int G__DictOutput_457_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (orrubaDet*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((orrubaDet*) (soff+(sizeof(orrubaDet)*i)))->~G__TorrubaDet();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (orrubaDet*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((orrubaDet*) (soff))->~G__TorrubaDet();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__DictOutput_457_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   orrubaDet* dest = (orrubaDet*) G__getstructoffset();
   *dest = *(orrubaDet*) libp->para[0].ref;
   const orrubaDet& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* BB10 */
static int G__DictOutput_489_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   BB10* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new BB10[n];
     } else {
       p = new((void*) gvp) BB10[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new BB10;
     } else {
       p = new((void*) gvp) BB10;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictOutputLN_BB10));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_489_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   BB10* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 5
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new BB10(
*((string*) G__int(libp->para[0])), (UShort_t) G__int(libp->para[1])
, (UShort_t) G__int(libp->para[2]), (Bool_t) G__int(libp->para[3])
, *((solidVector*) G__int(libp->para[4])));
   } else {
     p = new((void*) gvp) BB10(
*((string*) G__int(libp->para[0])), (UShort_t) G__int(libp->para[1])
, (UShort_t) G__int(libp->para[2]), (Bool_t) G__int(libp->para[3])
, *((solidVector*) G__int(libp->para[4])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictOutputLN_BB10));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_489_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BB10*) G__getstructoffset())->SetGeomParameters(*((map<string,Double_t>*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_489_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TVector3* pobj;
         TVector3 xobj = ((BB10*) G__getstructoffset())->GetPStripCenterPos((Int_t) G__int(libp->para[0]));
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_489_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((BB10*) G__getstructoffset())->GetNumBins());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_489_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((BB10*) G__getstructoffset())->GetPTypeBins());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_489_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((BB10*) G__getstructoffset())->GetAzimuthalBins());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_489_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((BB10*) G__getstructoffset())->GetPTypeBinCenters());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_489_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((BB10*) G__getstructoffset())->GetAzimuthalBinCenters());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_489_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BB10*) G__getstructoffset())->ConstructBins();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_489_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) BB10::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_489_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) BB10::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_489_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) BB10::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_489_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      BB10::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_489_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BB10*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_489_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) BB10::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_489_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) BB10::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_489_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) BB10::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_489_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) BB10::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__DictOutput_489_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   BB10* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new BB10(*(BB10*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictOutputLN_BB10));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef BB10 G__TBB10;
static int G__DictOutput_489_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (BB10*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((BB10*) (soff+(sizeof(BB10)*i)))->~G__TBB10();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (BB10*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((BB10*) (soff))->~G__TBB10();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__DictOutput_489_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   BB10* dest = (BB10*) G__getstructoffset();
   *dest = *(BB10*) libp->para[0].ref;
   const BB10& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* detectorOUT */
// automatic default constructor
static int G__DictOutput_490_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   detectorOUT *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new detectorOUT[n];
     } else {
       p = new((void*) gvp) detectorOUT[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new detectorOUT;
     } else {
       p = new((void*) gvp) detectorOUT;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictOutputLN_detectorOUT));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__DictOutput_490_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   detectorOUT* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new detectorOUT(*(detectorOUT*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictOutputLN_detectorOUT));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef detectorOUT G__TdetectorOUT;
static int G__DictOutput_490_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (detectorOUT*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((detectorOUT*) (soff+(sizeof(detectorOUT)*i)))->~G__TdetectorOUT();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (detectorOUT*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((detectorOUT*) (soff))->~G__TdetectorOUT();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__DictOutput_490_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   detectorOUT* dest = (detectorOUT*) G__getstructoffset();
   *dest = *(detectorOUT*) libp->para[0].ref;
   const detectorOUT& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* g2IntPt */
static int G__DictOutput_530_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   g2IntPt* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new g2IntPt[n];
     } else {
       p = new((void*) gvp) g2IntPt[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new g2IntPt;
     } else {
       p = new((void*) gvp) g2IntPt;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictOutputLN_g2IntPt));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_530_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) g2IntPt::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_530_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) g2IntPt::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_530_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) g2IntPt::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_530_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      g2IntPt::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_530_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((g2IntPt*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_530_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) g2IntPt::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_530_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) g2IntPt::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_530_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) g2IntPt::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_530_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) g2IntPt::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__DictOutput_530_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   g2IntPt* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new g2IntPt(*(g2IntPt*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictOutputLN_g2IntPt));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef g2IntPt G__Tg2IntPt;
static int G__DictOutput_530_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (g2IntPt*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((g2IntPt*) (soff+(sizeof(g2IntPt)*i)))->~G__Tg2IntPt();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (g2IntPt*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((g2IntPt*) (soff))->~G__Tg2IntPt();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__DictOutput_530_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   g2IntPt* dest = (g2IntPt*) G__getstructoffset();
   *dest = *(g2IntPt*) libp->para[0].ref;
   const g2IntPt& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* g2CrystalEvent */
static int G__DictOutput_531_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   g2CrystalEvent* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new g2CrystalEvent[n];
     } else {
       p = new((void*) gvp) g2CrystalEvent[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new g2CrystalEvent;
     } else {
       p = new((void*) gvp) g2CrystalEvent;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictOutputLN_g2CrystalEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_531_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((g2CrystalEvent*) G__getstructoffset())->Reset();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_531_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((g2CrystalEvent*) G__getstructoffset())->numIntPts());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_531_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((g2CrystalEvent*) G__getstructoffset())->numSegHit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_531_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((g2CrystalEvent*) G__getstructoffset())->segsHitAboveThresh((Float_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_531_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((g2CrystalEvent*) G__getstructoffset())->averageIntPtsPerSeg());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_531_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((g2CrystalEvent*) G__getstructoffset())->segSumRaw());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_531_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((g2CrystalEvent*) G__getstructoffset())->segSumRawThresh((Float_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_531_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TVector3* pobj;
         TVector3 xobj = ((g2CrystalEvent*) G__getstructoffset())->maxIntPtXYZ();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_531_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((g2CrystalEvent*) G__getstructoffset())->maxIntPtX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_531_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((g2CrystalEvent*) G__getstructoffset())->maxIntPtY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_531_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((g2CrystalEvent*) G__getstructoffset())->maxIntPtZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_531_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((g2CrystalEvent*) G__getstructoffset())->maxIntPtR());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_531_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TVector3* pobj;
         TVector3 xobj = ((g2CrystalEvent*) G__getstructoffset())->maxIntPtXYZLab();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_531_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TVector3* pobj;
         TVector3 xobj = ((g2CrystalEvent*) G__getstructoffset())->maxIntPtXYZLabSeg();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_531_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TVector3* pobj;
         TVector3 xobj = ((g2CrystalEvent*) G__getstructoffset())->maxIntPtXYZLabCrystal();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_531_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((g2CrystalEvent*) G__getstructoffset())->maxIntPtE());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_531_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((g2CrystalEvent*) G__getstructoffset())->maxIntPtSegNum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_531_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((g2CrystalEvent*) G__getstructoffset())->maxIntPtSegE());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_531_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((g2CrystalEvent*) G__getstructoffset())->gTheta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_531_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((g2CrystalEvent*) G__getstructoffset())->gPhi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_531_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((g2CrystalEvent*) G__getstructoffset())->CosDop());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_531_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((g2CrystalEvent*) G__getstructoffset())->cDoppler((Float_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_531_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((g2CrystalEvent*) G__getstructoffset())->cDopplerSeg((Float_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_531_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((g2CrystalEvent*) G__getstructoffset())->cDopplerCrystal((Float_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_531_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) g2CrystalEvent::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_531_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) g2CrystalEvent::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_531_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) g2CrystalEvent::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_531_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      g2CrystalEvent::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_531_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((g2CrystalEvent*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_531_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) g2CrystalEvent::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_531_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) g2CrystalEvent::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_531_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) g2CrystalEvent::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_531_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) g2CrystalEvent::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__DictOutput_531_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   g2CrystalEvent* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new g2CrystalEvent(*(g2CrystalEvent*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictOutputLN_g2CrystalEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef g2CrystalEvent G__Tg2CrystalEvent;
static int G__DictOutput_531_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (g2CrystalEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((g2CrystalEvent*) (soff+(sizeof(g2CrystalEvent)*i)))->~G__Tg2CrystalEvent();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (g2CrystalEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((g2CrystalEvent*) (soff))->~G__Tg2CrystalEvent();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__DictOutput_531_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   g2CrystalEvent* dest = (g2CrystalEvent*) G__getstructoffset();
   *dest = *(g2CrystalEvent*) libp->para[0].ref;
   const g2CrystalEvent& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* g2OUT */
static int G__DictOutput_536_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   g2OUT* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new g2OUT[n];
     } else {
       p = new((void*) gvp) g2OUT[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new g2OUT;
     } else {
       p = new((void*) gvp) g2OUT;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictOutputLN_g2OUT));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_536_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((g2OUT*) G__getstructoffset())->Reset();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_536_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((g2OUT*) G__getstructoffset())->calorimeterDoppler((Float_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_536_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((g2OUT*) G__getstructoffset())->calorimeterE((Float_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_536_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((g2OUT*) G__getstructoffset())->calorimeterE());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_536_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((g2OUT*) G__getstructoffset())->crystalMult());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_536_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) g2OUT::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_536_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) g2OUT::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_536_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) g2OUT::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_536_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      g2OUT::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_536_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((g2OUT*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_536_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) g2OUT::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_536_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) g2OUT::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_536_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) g2OUT::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_536_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) g2OUT::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__DictOutput_536_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   g2OUT* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new g2OUT(*(g2OUT*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictOutputLN_g2OUT));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef g2OUT G__Tg2OUT;
static int G__DictOutput_536_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (g2OUT*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((g2OUT*) (soff+(sizeof(g2OUT)*i)))->~G__Tg2OUT();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (g2OUT*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((g2OUT*) (soff))->~G__Tg2OUT();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__DictOutput_536_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   g2OUT* dest = (g2OUT*) G__getstructoffset();
   *dest = *(g2OUT*) libp->para[0].ref;
   const g2OUT& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* goddessOut */
static int G__DictOutput_541_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   goddessOut* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new goddessOut[n];
     } else {
       p = new((void*) gvp) goddessOut[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new goddessOut;
     } else {
       p = new((void*) gvp) goddessOut;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictOutputLN_goddessOut));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_541_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((goddessOut*) G__getstructoffset())->Clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_541_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) goddessOut::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_541_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) goddessOut::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_541_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) goddessOut::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_541_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      goddessOut::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_541_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((goddessOut*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_541_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) goddessOut::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_541_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) goddessOut::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_541_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) goddessOut::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_541_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) goddessOut::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__DictOutput_541_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   goddessOut* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new goddessOut(*(goddessOut*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictOutputLN_goddessOut));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef goddessOut G__TgoddessOut;
static int G__DictOutput_541_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (goddessOut*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((goddessOut*) (soff+(sizeof(goddessOut)*i)))->~G__TgoddessOut();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (goddessOut*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((goddessOut*) (soff))->~G__TgoddessOut();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__DictOutput_541_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   goddessOut* dest = (goddessOut*) G__getstructoffset();
   *dest = *(goddessOut*) libp->para[0].ref;
   const goddessOut& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* QQQ5 */
static int G__DictOutput_550_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   QQQ5* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new QQQ5[n];
     } else {
       p = new((void*) gvp) QQQ5[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new QQQ5;
     } else {
       p = new((void*) gvp) QQQ5;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictOutputLN_QQQ5));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_550_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   QQQ5* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 5
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new QQQ5(
*((string*) G__int(libp->para[0])), (UShort_t) G__int(libp->para[1])
, (UShort_t) G__int(libp->para[2]), (Bool_t) G__int(libp->para[3])
, *((solidVector*) G__int(libp->para[4])));
   } else {
     p = new((void*) gvp) QQQ5(
*((string*) G__int(libp->para[0])), (UShort_t) G__int(libp->para[1])
, (UShort_t) G__int(libp->para[2]), (Bool_t) G__int(libp->para[3])
, *((solidVector*) G__int(libp->para[4])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictOutputLN_QQQ5));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_550_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((QQQ5*) G__getstructoffset())->Clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_550_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((QQQ5*) G__getstructoffset())->SetGeomParameters(*((map<string,Double_t>*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_550_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TVector3* pobj;
         TVector3 xobj = ((QQQ5*) G__getstructoffset())->GetPStripCenterPos((Int_t) G__int(libp->para[0]));
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_550_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((QQQ5*) G__getstructoffset())->GetNStripCenterPos());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_550_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((QQQ5*) G__getstructoffset())->GetNumNTypeBins());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_550_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((QQQ5*) G__getstructoffset())->GetNumPTypeBins());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_550_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((QQQ5*) G__getstructoffset())->GetPTypeBins());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_550_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((QQQ5*) G__getstructoffset())->GetPTypeBinsCenter());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_550_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((QQQ5*) G__getstructoffset())->GetNTypeBins());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_550_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((QQQ5*) G__getstructoffset())->GetNTypeBinsCenter());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_550_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((QQQ5*) G__getstructoffset())->GetRhoBins());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_550_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((QQQ5*) G__getstructoffset())->GetAzimuthalBins());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_550_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((QQQ5*) G__getstructoffset())->GetPolarBins());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_550_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((QQQ5*) G__getstructoffset())->GetPolarBinsCenter());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_550_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((QQQ5*) G__getstructoffset())->ConstructBins();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_550_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) QQQ5::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_550_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) QQQ5::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_550_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) QQQ5::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_550_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      QQQ5::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_550_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((QQQ5*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_550_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) QQQ5::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_550_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) QQQ5::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_550_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) QQQ5::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_550_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) QQQ5::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__DictOutput_550_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   QQQ5* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new QQQ5(*(QQQ5*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictOutputLN_QQQ5));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef QQQ5 G__TQQQ5;
static int G__DictOutput_550_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (QQQ5*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((QQQ5*) (soff+(sizeof(QQQ5)*i)))->~G__TQQQ5();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (QQQ5*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((QQQ5*) (soff))->~G__TQQQ5();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__DictOutput_550_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   QQQ5* dest = (QQQ5*) G__getstructoffset();
   *dest = *(QQQ5*) libp->para[0].ref;
   const QQQ5& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* superX3 */
static int G__DictOutput_551_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   superX3* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new superX3[n];
     } else {
       p = new((void*) gvp) superX3[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new superX3;
     } else {
       p = new((void*) gvp) superX3;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictOutputLN_superX3));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_551_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   superX3* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 5
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new superX3(
*((string*) G__int(libp->para[0])), (UShort_t) G__int(libp->para[1])
, (UShort_t) G__int(libp->para[2]), (Bool_t) G__int(libp->para[3])
, *((solidVector*) G__int(libp->para[4])));
   } else {
     p = new((void*) gvp) superX3(
*((string*) G__int(libp->para[0])), (UShort_t) G__int(libp->para[1])
, (UShort_t) G__int(libp->para[2]), (Bool_t) G__int(libp->para[3])
, *((solidVector*) G__int(libp->para[4])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictOutputLN_superX3));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_551_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((superX3*) G__getstructoffset())->Clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_551_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((superX3*) G__getstructoffset())->SetGeomParameters(*((map<string,Double_t>*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_551_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TVector3* pobj;
         TVector3 xobj = ((superX3*) G__getstructoffset())->GetPStripCenterPos((Int_t) G__int(libp->para[0]));
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_551_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TVector3* pobj;
         TVector3 xobj = ((superX3*) G__getstructoffset())->GetNStripCenterPos((Int_t) G__int(libp->para[0]));
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_551_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((superX3*) G__getstructoffset())->GetNumBins());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_551_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((superX3*) G__getstructoffset())->GetPtypeBins());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_551_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((superX3*) G__getstructoffset())->GetNtypeBins());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_551_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((superX3*) G__getstructoffset())->GetPtypeCenterBins());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_551_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((superX3*) G__getstructoffset())->GetNtypeCenterBins());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_551_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((superX3*) G__getstructoffset())->GetZbins());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_551_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((superX3*) G__getstructoffset())->GetZCenterBins());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_551_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((superX3*) G__getstructoffset())->GetAzimuthalBins());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_551_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((superX3*) G__getstructoffset())->GetAzimuthalCenterBins());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_551_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((superX3*) G__getstructoffset())->GetPolarBins());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_551_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((superX3*) G__getstructoffset())->ConstructBins();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_551_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((superX3*) G__getstructoffset())->ValidStrip((UShort_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_551_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((superX3*) G__getstructoffset())->GetStrip((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_551_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((superX3*) G__getstructoffset())->GetNearChannel((UShort_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_551_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((superX3*) G__getstructoffset())->GetFarChannel((UShort_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_551_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 102, (double) ((superX3*) G__getstructoffset())->GetNearE((Bool_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 102, (double) ((superX3*) G__getstructoffset())->GetNearE());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_551_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 102, (double) ((superX3*) G__getstructoffset())->GetFarE((Bool_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 102, (double) ((superX3*) G__getstructoffset())->GetFarE());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_551_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((superX3*) G__getstructoffset())->UpdatePosition((UShort_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_551_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         orrubaDet::valueMap* pobj;
         orrubaDet::valueMap xobj = ((superX3*) G__getstructoffset())->GetStripPosRaw();
         pobj = new orrubaDet::valueMap(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_551_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         orrubaDet::valueMap* pobj;
         orrubaDet::valueMap xobj = ((superX3*) G__getstructoffset())->GetStripPosCal();
         pobj = new orrubaDet::valueMap(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_551_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((superX3*) G__getstructoffset())->SetStripPosCalParameters((Int_t) G__int(libp->para[0]), *((vector<Float_t>*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_551_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((superX3*) G__getstructoffset())->SetStripECalParameters((Int_t) G__int(libp->para[0]), *((vector<Float_t>*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_551_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((superX3*) G__getstructoffset())->GetResStripParCal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_551_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      {
         vector<Float_t>* pobj;
         vector<Float_t> xobj = ((superX3*) G__getstructoffset())->GetResE((Bool_t) G__int(libp->para[0]));
         pobj = new vector<Float_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 0:
      {
         vector<Float_t>* pobj;
         vector<Float_t> xobj = ((superX3*) G__getstructoffset())->GetResE();
         pobj = new vector<Float_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_551_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) superX3::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_551_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) superX3::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_551_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) superX3::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_551_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      superX3::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_551_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((superX3*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_551_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) superX3::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_551_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) superX3::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_551_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) superX3::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_551_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) superX3::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__DictOutput_551_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   superX3* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new superX3(*(superX3*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictOutputLN_superX3));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef superX3 G__TsuperX3;
static int G__DictOutput_551_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (superX3*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((superX3*) (soff+(sizeof(superX3)*i)))->~G__TsuperX3();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (superX3*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((superX3*) (soff))->~G__TsuperX3();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__DictOutput_551_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   superX3* dest = (superX3*) G__getstructoffset();
   *dest = *(superX3*) libp->para[0].ref;
   const superX3& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ionChamber */
static int G__DictOutput_552_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ionChamber* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ionChamber[n];
     } else {
       p = new((void*) gvp) ionChamber[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ionChamber;
     } else {
       p = new((void*) gvp) ionChamber;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictOutputLN_ionChamber));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_552_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ionChamber* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 5
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ionChamber(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]));
   } else {
     p = new((void*) gvp) ionChamber(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictOutputLN_ionChamber));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_552_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ionChamber*) G__getstructoffset())->Clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_552_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ionChamber*) G__getstructoffset())->SetChannelMap(*((map<Short_t,Short_t>*) G__int(libp->para[0])), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_552_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<Short_t,Short_t>* pobj;
         map<Short_t,Short_t> xobj = ((ionChamber*) G__getstructoffset())->GetChannelMap((Int_t) G__int(libp->para[0]));
         pobj = new map<Short_t,Short_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_552_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ionChamber*) G__getstructoffset())->ValidChannel((UInt_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_552_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ionChamber*) G__getstructoffset())->SetRawValue((UInt_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_552_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ionChamber*) G__getstructoffset())->SetThresholds(*((vector<Int_t>*) G__int(libp->para[0])), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_552_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Int_t>* pobj;
         vector<Int_t> xobj = ((ionChamber*) G__getstructoffset())->GetThresholds((Int_t) G__int(libp->para[0]));
         pobj = new vector<Int_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_552_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ionChamber*) G__getstructoffset())->LoadEvent((goddessEvent*) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_552_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ionChamber*) G__getstructoffset())->GetNumChannels((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_552_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((ionChamber*) G__getstructoffset())->GetAnodeDE());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_552_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((ionChamber*) G__getstructoffset())->GetAnodeResE());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_552_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((ionChamber*) G__getstructoffset())->GetAnodeE());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_552_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ionChamber*) G__getstructoffset())->GetMaxX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_552_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ionChamber*) G__getstructoffset())->GetMaxY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_552_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ionChamber::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_552_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ionChamber::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_552_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ionChamber::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_552_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ionChamber::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_552_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ionChamber*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_552_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ionChamber::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_552_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ionChamber::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_552_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ionChamber::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_552_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ionChamber::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__DictOutput_552_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ionChamber* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ionChamber(*(ionChamber*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictOutputLN_ionChamber));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ionChamber G__TionChamber;
static int G__DictOutput_552_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ionChamber*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ionChamber*) (soff+(sizeof(ionChamber)*i)))->~G__TionChamber();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ionChamber*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ionChamber*) (soff))->~G__TionChamber();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__DictOutput_552_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ionChamber* dest = (ionChamber*) G__getstructoffset();
   *dest = *(ionChamber*) libp->para[0].ref;
   const ionChamber& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* tdc_t */
static int G__DictOutput_553_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   tdc_t* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new tdc_t[n];
     } else {
       p = new((void*) gvp) tdc_t[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new tdc_t;
     } else {
       p = new((void*) gvp) tdc_t;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictOutputLN_tdc_t));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_553_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   tdc_t* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new tdc_t((Int_t) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) tdc_t((Int_t) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictOutputLN_tdc_t));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_553_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((tdc_t*) G__getstructoffset())->Clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_553_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((tdc_t*) G__getstructoffset())->SetChannelMap(*((map<Short_t,Short_t>*) G__int(libp->para[0])), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_553_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<Short_t,Short_t>* pobj;
         map<Short_t,Short_t> xobj = ((tdc_t*) G__getstructoffset())->GetChannelMap((Int_t) G__int(libp->para[0]));
         pobj = new map<Short_t,Short_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_553_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((tdc_t*) G__getstructoffset())->ValidChannel((UInt_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_553_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((tdc_t*) G__getstructoffset())->SetRawValue((UInt_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_553_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((tdc_t*) G__getstructoffset())->SetThresholds(*((vector<Int_t>*) G__int(libp->para[0])), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_553_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<Int_t>* pobj;
         vector<Int_t> xobj = ((tdc_t*) G__getstructoffset())->GetThresholds();
         pobj = new vector<Int_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_553_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((tdc_t*) G__getstructoffset())->LoadEvent((goddessEvent*) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_553_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((tdc_t*) G__getstructoffset())->GetTDCValue((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_553_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((tdc_t*) G__getstructoffset())->SetTDCValue((UInt_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_553_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) tdc_t::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_553_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) tdc_t::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_553_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) tdc_t::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_553_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      tdc_t::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_553_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((tdc_t*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_553_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) tdc_t::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_553_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) tdc_t::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_553_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) tdc_t::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_553_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) tdc_t::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__DictOutput_553_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   tdc_t* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new tdc_t(*(tdc_t*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictOutputLN_tdc_t));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef tdc_t G__Ttdc_t;
static int G__DictOutput_553_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (tdc_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((tdc_t*) (soff+(sizeof(tdc_t)*i)))->~G__Ttdc_t();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (tdc_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((tdc_t*) (soff))->~G__Ttdc_t();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__DictOutput_553_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   tdc_t* dest = (tdc_t*) G__getstructoffset();
   *dest = *(tdc_t*) libp->para[0].ref;
   const tdc_t& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* goddessFull */
static int G__DictOutput_554_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   goddessFull* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new goddessFull[n];
     } else {
       p = new((void*) gvp) goddessFull[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new goddessFull;
     } else {
       p = new((void*) gvp) goddessFull;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictOutputLN_goddessFull));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_554_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((goddessFull*) G__getstructoffset())->Initialize();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_554_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((goddessFull*) G__getstructoffset())->Clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_554_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((goddessFull*) G__getstructoffset())->ParseID(*((string*) G__int(libp->para[0])), *(Short_t*) G__Shortref(&libp->para[1])
, *(Short_t*) G__Shortref(&libp->para[2]), *(Bool_t*) G__Boolref(&libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_554_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((goddessFull*) G__getstructoffset())->ReadPositions(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_554_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         solidVector* pobj;
         solidVector xobj = ((goddessFull*) G__getstructoffset())->GetPosVector(*((string*) G__int(libp->para[0])), (Short_t) G__int(libp->para[1])
, (Short_t) G__int(libp->para[2]), (Bool_t) G__int(libp->para[3]));
         pobj = new solidVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_554_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((goddessFull*) G__getstructoffset())->ReadConfiguration(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_554_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((goddessFull*) G__getstructoffset())->InitializeDetectors();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_554_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((goddessFull*) G__getstructoffset())->getAnalogGoddess((FILE*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_554_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((goddessFull*) G__getstructoffset())->printAnalogRawEvent();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_554_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((goddessFull*) G__getstructoffset())->ProcessEvent();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_554_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((goddessFull*) G__getstructoffset())->ResetOutput((detectorOUT*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_554_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) goddessFull::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_554_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) goddessFull::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_554_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) goddessFull::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_554_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      goddessFull::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_554_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((goddessFull*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_554_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) goddessFull::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_554_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) goddessFull::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_554_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) goddessFull::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DictOutput_554_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) goddessFull::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__DictOutput_554_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   goddessFull* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new goddessFull(*(goddessFull*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictOutputLN_goddessFull));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef goddessFull G__TgoddessFull;
static int G__DictOutput_554_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (goddessFull*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((goddessFull*) (soff+(sizeof(goddessFull)*i)))->~G__TgoddessFull();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (goddessFull*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((goddessFull*) (soff))->~G__TgoddessFull();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__DictOutput_554_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   goddessFull* dest = (goddessFull*) G__getstructoffset();
   *dest = *(goddessFull*) libp->para[0].ref;
   const goddessFull& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* solidVector */

/* goddessEvent */

/* orrubaDet */

/* BB10 */

/* detectorOUT */

/* g2IntPt */

/* g2CrystalEvent */

/* g2OUT */

/* goddessOut */

/* QQQ5 */

/* superX3 */

/* ionChamber */

/* tdc_t */

/* goddessFull */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncDictOutput {
 public:
  G__Sizep2memfuncDictOutput(): p(&G__Sizep2memfuncDictOutput::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncDictOutput::*p)();
};

size_t G__get_sizep2memfuncDictOutput()
{
  G__Sizep2memfuncDictOutput a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceDictOutput() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DictOutputLN_solidVector))) {
     solidVector *G__Lderived;
     G__Lderived=(solidVector*)0x1000;
     {
       TVector3 *G__Lpbase=(TVector3*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictOutputLN_solidVector),G__get_linked_tagnum(&G__DictOutputLN_TVector3),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictOutputLN_solidVector),G__get_linked_tagnum(&G__DictOutputLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DictOutputLN_orrubaDet))) {
     orrubaDet *G__Lderived;
     G__Lderived=(orrubaDet*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictOutputLN_orrubaDet),G__get_linked_tagnum(&G__DictOutputLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DictOutputLN_BB10))) {
     BB10 *G__Lderived;
     G__Lderived=(BB10*)0x1000;
     {
       orrubaDet *G__Lpbase=(orrubaDet*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictOutputLN_BB10),G__get_linked_tagnum(&G__DictOutputLN_orrubaDet),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictOutputLN_BB10),G__get_linked_tagnum(&G__DictOutputLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DictOutputLN_g2IntPt))) {
     g2IntPt *G__Lderived;
     G__Lderived=(g2IntPt*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictOutputLN_g2IntPt),G__get_linked_tagnum(&G__DictOutputLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DictOutputLN_g2CrystalEvent))) {
     g2CrystalEvent *G__Lderived;
     G__Lderived=(g2CrystalEvent*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictOutputLN_g2CrystalEvent),G__get_linked_tagnum(&G__DictOutputLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DictOutputLN_g2OUT))) {
     g2OUT *G__Lderived;
     G__Lderived=(g2OUT*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictOutputLN_g2OUT),G__get_linked_tagnum(&G__DictOutputLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DictOutputLN_goddessOut))) {
     goddessOut *G__Lderived;
     G__Lderived=(goddessOut*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictOutputLN_goddessOut),G__get_linked_tagnum(&G__DictOutputLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DictOutputLN_QQQ5))) {
     QQQ5 *G__Lderived;
     G__Lderived=(QQQ5*)0x1000;
     {
       orrubaDet *G__Lpbase=(orrubaDet*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictOutputLN_QQQ5),G__get_linked_tagnum(&G__DictOutputLN_orrubaDet),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictOutputLN_QQQ5),G__get_linked_tagnum(&G__DictOutputLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DictOutputLN_superX3))) {
     superX3 *G__Lderived;
     G__Lderived=(superX3*)0x1000;
     {
       orrubaDet *G__Lpbase=(orrubaDet*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictOutputLN_superX3),G__get_linked_tagnum(&G__DictOutputLN_orrubaDet),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictOutputLN_superX3),G__get_linked_tagnum(&G__DictOutputLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DictOutputLN_ionChamber))) {
     ionChamber *G__Lderived;
     G__Lderived=(ionChamber*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictOutputLN_ionChamber),G__get_linked_tagnum(&G__DictOutputLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DictOutputLN_tdc_t))) {
     tdc_t *G__Lderived;
     G__Lderived=(tdc_t*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictOutputLN_tdc_t),G__get_linked_tagnum(&G__DictOutputLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DictOutputLN_goddessFull))) {
     goddessFull *G__Lderived;
     G__Lderived=(goddessFull*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictOutputLN_goddessFull),G__get_linked_tagnum(&G__DictOutputLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableDictOutput() {

   /* Setting up typedef entry */
   G__search_typename2("Short_t",115,-1,0,-1);
   G__setnewtype(-1,"Signed Short integer 2 bytes (short)",0);
   G__search_typename2("UShort_t",114,-1,0,-1);
   G__setnewtype(-1,"Unsigned Short integer 2 bytes (unsigned short)",0);
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("UInt_t",104,-1,0,-1);
   G__setnewtype(-1,"Unsigned integer 4 bytes (unsigned int)",0);
   G__search_typename2("Float_t",102,-1,0,-1);
   G__setnewtype(-1,"Float 4 bytes (float)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__DictOutputLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictOutputLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictOutputLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictOutputLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictOutputLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__DictOutputLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictOutputLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictOutputLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictOutputLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictOutputLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("uint64_t",107,-1,0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__DictOutputLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__DictOutputLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__DictOutputLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__DictOutputLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__DictOutputLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__DictOutputLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__DictOutputLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__DictOutputLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__DictOutputLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__DictOutputLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__DictOutputLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__DictOutputLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__DictOutputLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__DictOutputLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__DictOutputLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__DictOutputLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__DictOutputLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__DictOutputLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__DictOutputLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__DictOutputLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__DictOutputLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<UShort_t>",117,G__get_linked_tagnum(&G__DictOutputLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<Short_t,Float_t>",117,G__get_linked_tagnum(&G__DictOutputLN_maplEshortcOfloatcOlesslEshortgRcOallocatorlEpairlEconstsPshortcOfloatgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<short,float>",117,G__get_linked_tagnum(&G__DictOutputLN_maplEshortcOfloatcOlesslEshortgRcOallocatorlEpairlEconstsPshortcOfloatgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<short,float,less<short> >",117,G__get_linked_tagnum(&G__DictOutputLN_maplEshortcOfloatcOlesslEshortgRcOallocatorlEpairlEconstsPshortcOfloatgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("valueMap",117,G__get_linked_tagnum(&G__DictOutputLN_maplEshortcOfloatcOlesslEshortgRcOallocatorlEpairlEconstsPshortcOfloatgRsPgRsPgR),0,G__get_linked_tagnum(&G__DictOutputLN_orrubaDet));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<Short_t,uint64_t>",117,G__get_linked_tagnum(&G__DictOutputLN_maplEshortcOunsignedsPlongcOlesslEshortgRcOallocatorlEpairlEconstsPshortcOunsignedsPlonggRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<short,unsigned long>",117,G__get_linked_tagnum(&G__DictOutputLN_maplEshortcOunsignedsPlongcOlesslEshortgRcOallocatorlEpairlEconstsPshortcOunsignedsPlonggRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<short,unsigned long,less<short> >",117,G__get_linked_tagnum(&G__DictOutputLN_maplEshortcOunsignedsPlongcOlesslEshortgRcOallocatorlEpairlEconstsPshortcOunsignedsPlonggRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("timeMap",117,G__get_linked_tagnum(&G__DictOutputLN_maplEshortcOunsignedsPlongcOlesslEshortgRcOallocatorlEpairlEconstsPshortcOunsignedsPlonggRsPgRsPgR),0,G__get_linked_tagnum(&G__DictOutputLN_orrubaDet));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<Short_t,Short_t>",117,G__get_linked_tagnum(&G__DictOutputLN_maplEshortcOshortcOlesslEshortgRcOallocatorlEpairlEconstsPshortcOshortgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<short,short>",117,G__get_linked_tagnum(&G__DictOutputLN_maplEshortcOshortcOlesslEshortgRcOallocatorlEpairlEconstsPshortcOshortgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<short,short,less<short> >",117,G__get_linked_tagnum(&G__DictOutputLN_maplEshortcOshortcOlesslEshortgRcOallocatorlEpairlEconstsPshortcOshortgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("chMap",117,G__get_linked_tagnum(&G__DictOutputLN_maplEshortcOshortcOlesslEshortgRcOallocatorlEpairlEconstsPshortcOshortgRsPgRsPgR),0,G__get_linked_tagnum(&G__DictOutputLN_orrubaDet));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Float_t>",117,G__get_linked_tagnum(&G__DictOutputLN_vectorlEfloatcOallocatorlEfloatgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::vector<Float_t> >",117,G__get_linked_tagnum(&G__DictOutputLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<Float_t> >",117,G__get_linked_tagnum(&G__DictOutputLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictOutputLN_reverse_iteratorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictOutputLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictOutputLN_reverse_iteratorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictOutputLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<float,allocator<float> > >",117,G__get_linked_tagnum(&G__DictOutputLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Int_t>",117,G__get_linked_tagnum(&G__DictOutputLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictOutputLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictOutputLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictOutputLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictOutputLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int>",117,G__get_linked_tagnum(&G__DictOutputLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<uint64_t>",117,G__get_linked_tagnum(&G__DictOutputLN_vectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,Double_t>",117,G__get_linked_tagnum(&G__DictOutputLN_maplEstringcOdoublecOlesslEstringgRcOallocatorlEpairlEconstsPstringcOdoublegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__DictOutputLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__DictOutputLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__DictOutputLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__DictOutputLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__DictOutputLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__DictOutputLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__DictOutputLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__DictOutputLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__DictOutputLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<g2IntPt>",117,G__get_linked_tagnum(&G__DictOutputLN_vectorlEg2IntPtcOallocatorlEg2IntPtgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictOutputLN_reverse_iteratorlEvectorlEg2IntPtcOallocatorlEg2IntPtgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictOutputLN_vectorlEg2IntPtcOallocatorlEg2IntPtgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictOutputLN_reverse_iteratorlEvectorlEg2IntPtcOallocatorlEg2IntPtgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictOutputLN_vectorlEg2IntPtcOallocatorlEg2IntPtgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Short_t>",117,G__get_linked_tagnum(&G__DictOutputLN_vectorlEshortcOallocatorlEshortgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<g2CrystalEvent>",117,G__get_linked_tagnum(&G__DictOutputLN_vectorlEg2CrystalEventcOallocatorlEg2CrystalEventgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictOutputLN_reverse_iteratorlEvectorlEg2CrystalEventcOallocatorlEg2CrystalEventgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictOutputLN_vectorlEg2CrystalEventcOallocatorlEg2CrystalEventgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictOutputLN_reverse_iteratorlEvectorlEg2CrystalEventcOallocatorlEg2CrystalEventgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictOutputLN_vectorlEg2CrystalEventcOallocatorlEg2CrystalEventgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<string>",117,G__get_linked_tagnum(&G__DictOutputLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictOutputLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictOutputLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictOutputLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictOutputLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<detectorOUT>",117,G__get_linked_tagnum(&G__DictOutputLN_vectorlEdetectorOUTcOallocatorlEdetectorOUTgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictOutputLN_reverse_iteratorlEvectorlEdetectorOUTcOallocatorlEdetectorOUTgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictOutputLN_vectorlEdetectorOUTcOallocatorlEdetectorOUTgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictOutputLN_reverse_iteratorlEvectorlEdetectorOUTcOallocatorlEdetectorOUTgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictOutputLN_vectorlEdetectorOUTcOallocatorlEdetectorOUTgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("valueMap",117,G__get_linked_tagnum(&G__DictOutputLN_maplEshortcOfloatcOlesslEshortgRcOallocatorlEpairlEconstsPshortcOfloatgRsPgRsPgR),0,G__get_linked_tagnum(&G__DictOutputLN_ionChamber));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("chMap",117,G__get_linked_tagnum(&G__DictOutputLN_maplEshortcOshortcOlesslEshortgRcOallocatorlEpairlEconstsPshortcOshortgRsPgRsPgR),0,G__get_linked_tagnum(&G__DictOutputLN_ionChamber));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("valueMap",117,G__get_linked_tagnum(&G__DictOutputLN_maplEshortcOfloatcOlesslEshortgRcOallocatorlEpairlEconstsPshortcOfloatgRsPgRsPgR),0,G__get_linked_tagnum(&G__DictOutputLN_tdc_t));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("chMap",117,G__get_linked_tagnum(&G__DictOutputLN_maplEshortcOshortcOlesslEshortgRcOallocatorlEpairlEconstsPshortcOshortgRsPgRsPgR),0,G__get_linked_tagnum(&G__DictOutputLN_tdc_t));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<QQQ5>",117,G__get_linked_tagnum(&G__DictOutputLN_vectorlEQQQ5cOallocatorlEQQQ5gRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictOutputLN_reverse_iteratorlEvectorlEQQQ5cOallocatorlEQQQ5gRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictOutputLN_vectorlEQQQ5cOallocatorlEQQQ5gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictOutputLN_reverse_iteratorlEvectorlEQQQ5cOallocatorlEQQQ5gRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictOutputLN_vectorlEQQQ5cOallocatorlEQQQ5gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<superX3>",117,G__get_linked_tagnum(&G__DictOutputLN_vectorlEsuperX3cOallocatorlEsuperX3gRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictOutputLN_reverse_iteratorlEvectorlEsuperX3cOallocatorlEsuperX3gRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictOutputLN_vectorlEsuperX3cOallocatorlEsuperX3gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictOutputLN_reverse_iteratorlEvectorlEsuperX3cOallocatorlEsuperX3gRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictOutputLN_vectorlEsuperX3cOallocatorlEsuperX3gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<BB10>",117,G__get_linked_tagnum(&G__DictOutputLN_vectorlEBB10cOallocatorlEBB10gRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictOutputLN_reverse_iteratorlEvectorlEBB10cOallocatorlEBB10gRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictOutputLN_vectorlEBB10cOallocatorlEBB10gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictOutputLN_reverse_iteratorlEvectorlEBB10cOallocatorlEBB10gRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictOutputLN_vectorlEBB10cOallocatorlEBB10gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ionChamber>",117,G__get_linked_tagnum(&G__DictOutputLN_vectorlEionChambercOallocatorlEionChambergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictOutputLN_reverse_iteratorlEvectorlEionChambercOallocatorlEionChambergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictOutputLN_vectorlEionChambercOallocatorlEionChambergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictOutputLN_reverse_iteratorlEvectorlEionChambercOallocatorlEionChambergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictOutputLN_vectorlEionChambercOallocatorlEionChambergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<tdc_t>",117,G__get_linked_tagnum(&G__DictOutputLN_vectorlEtdc_tcOallocatorlEtdc_tgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictOutputLN_reverse_iteratorlEvectorlEtdc_tcOallocatorlEtdc_tgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictOutputLN_vectorlEtdc_tcOallocatorlEtdc_tgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictOutputLN_reverse_iteratorlEvectorlEtdc_tcOallocatorlEtdc_tgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictOutputLN_vectorlEtdc_tcOallocatorlEtdc_tgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* solidVector */
static void G__setup_memvarsolidVector(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictOutputLN_solidVector));
   { solidVector *p; p=(solidVector*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"rotZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"rotPhi=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictOutputLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* goddessEvent */
static void G__setup_memvargoddessEvent(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictOutputLN_goddessEvent));
   { goddessEvent *p; p=(goddessEvent*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->channels)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictOutputLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR),G__defined_typename("vector<UShort_t>"),-1,1,"channels=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->values)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictOutputLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR),G__defined_typename("vector<UShort_t>"),-1,1,"values=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->timestamp)-(long)(p)),109,0,0,-1,G__defined_typename("ULong64_t"),-1,1,"timestamp=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* orrubaDet */
static void G__setup_memvarorrubaDet(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictOutputLN_orrubaDet));
   { orrubaDet *p; p=(orrubaDet*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->nTYPE)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"nTYPE=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pTYPE)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"pTYPE=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,4,"numPtype=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,4,"numNtype=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictOutputLN_maplEshortcOfloatcOlesslEshortgRcOallocatorlEpairlEconstsPshortcOfloatgRsPgRsPgR),G__defined_typename("valueMap"),-1,4,"eRawPmap=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictOutputLN_maplEshortcOfloatcOlesslEshortgRcOallocatorlEpairlEconstsPshortcOfloatgRsPgRsPgR),G__defined_typename("valueMap"),-1,4,"eRawNmap=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictOutputLN_maplEshortcOfloatcOlesslEshortgRcOallocatorlEpairlEconstsPshortcOfloatgRsPgRsPgR),G__defined_typename("valueMap"),-1,4,"eCalPmap=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictOutputLN_maplEshortcOfloatcOlesslEshortgRcOallocatorlEpairlEconstsPshortcOfloatgRsPgRsPgR),G__defined_typename("valueMap"),-1,4,"eCalNmap=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictOutputLN_maplEshortcOunsignedsPlongcOlesslEshortgRcOallocatorlEpairlEconstsPshortcOunsignedsPlonggRsPgRsPgR),G__defined_typename("timeMap"),-1,4,"timePmap=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictOutputLN_maplEshortcOunsignedsPlongcOlesslEshortgRcOallocatorlEpairlEconstsPshortcOunsignedsPlonggRsPgRsPgR),G__defined_typename("timeMap"),-1,4,"timeNmap=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictOutputLN_maplEshortcOshortcOlesslEshortgRcOallocatorlEpairlEconstsPshortcOshortgRsPgRsPgR),G__defined_typename("chMap"),-1,4,"chMapP=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictOutputLN_maplEshortcOshortcOlesslEshortgRcOallocatorlEpairlEconstsPshortcOshortgRsPgRsPgR),G__defined_typename("chMap"),-1,4,"chMapN=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictOutputLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<Float_t> >"),-1,4,"parECalP=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictOutputLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<Float_t> >"),-1,4,"parECalN=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictOutputLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<Int_t>"),-1,4,"threshP=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictOutputLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<Int_t>"),-1,4,"threshN=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictOutputLN_string),-1,-1,2,"serialNum=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictOutputLN_string),-1,-1,2,"posID=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,2,"sector=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,2,"depth=",0,"# of detectors between this one and the target");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"upStream=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictOutputLN_solidVector),-1,-1,2,"detPos=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictOutputLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* BB10 */
static void G__setup_memvarBB10(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictOutputLN_BB10));
   { BB10 *p; p=(BB10*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->activeWidth)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"activeWidth=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->stripsP)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictOutputLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<Int_t>"),-1,1,"stripsP=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->eRawP)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictOutputLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,1,"eRawP=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->eCalP)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictOutputLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,1,"eCalP=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->timeP)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictOutputLN_vectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgR),G__defined_typename("vector<uint64_t>"),-1,1,"timeP=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictOutputLN_TVector3),-1,-1,4,"pStripEdgePos[9]=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictOutputLN_TVector3),-1,-1,4,"pStripCenterPos[8]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"binsP[9]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"binsAzimuthal[9]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"binsPCenter[8]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"binsAzimuthalCenter[8]=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictOutputLN_TVector3),-1,-1,4,"eventPos=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictOutputLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* detectorOUT */
static void G__setup_memvardetectorOUT(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictOutputLN_detectorOUT));
   { detectorOUT *p; p=(detectorOUT*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->depth)-(long)(p)),114,0,0,-1,G__defined_typename("UShort_t"),-1,1,"depth=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->upstream)-(long)(p)),114,0,0,-1,G__defined_typename("UShort_t"),-1,1,"upstream=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pStrip)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"pStrip=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nStrip)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"nStrip=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pECal)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"pECal=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nECal)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"nECal=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->evPos)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictOutputLN_TVector3),-1,-1,1,"evPos=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->eNearCal)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"eNearCal=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->eFarCal)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"eFarCal=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* g2IntPt */
static void G__setup_memvarg2IntPt(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictOutputLN_g2IntPt));
   { g2IntPt *p; p=(g2IntPt*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->segNum)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"segNum=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->xyz)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictOutputLN_TVector3),-1,-1,1,"xyz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->xyzLab)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictOutputLN_TVector3),-1,-1,1,"xyzLab=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->xyzLabSeg)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictOutputLN_TVector3),-1,-1,1,"xyzLabSeg=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->xyzLabCrys)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictOutputLN_TVector3),-1,-1,1,"xyzLabCrys=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->e)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"e=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->segE)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"segE=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictOutputLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* g2CrystalEvent */
static void G__setup_memvarg2CrystalEvent(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictOutputLN_g2CrystalEvent));
   { g2CrystalEvent *p; p=(g2CrystalEvent*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->crystalID)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"crystalID=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->crystalNum)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"crystalNum=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->quadNum)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"quadNum=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->timestamp)-(long)(p)),110,0,0,-1,-1,-1,1,"timestamp=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->t0)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"t0=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->chiSq)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"chiSq=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->normChiSq)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"normChiSq=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->bl)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"bl=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->error)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"error=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->cc)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"cc=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->edop)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"edop=",0,"glw");
   G__memvar_setup((void*)((long)(&p->edop_maxInt)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"edop_maxInt=",0,"AR");
   G__memvar_setup((void*)((long)(&p->edopSeg)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"edopSeg=",0,"glw");
   G__memvar_setup((void*)((long)(&p->edopXtal)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"edopXtal=",0,"glw");
   G__memvar_setup((void*)((long)(&p->ccCurrent)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"ccCurrent=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ccPrior1)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"ccPrior1=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ccPrior2)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"ccPrior2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->deltaT1)-(long)(p)),114,0,0,-1,G__defined_typename("UShort_t"),-1,1,"deltaT1=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->deltaT2)-(long)(p)),114,0,0,-1,G__defined_typename("UShort_t"),-1,1,"deltaT2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->cc1)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"cc1=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->cc2)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"cc2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->cc3)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"cc3=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->cc4)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"cc4=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->segSum)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"segSum=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->doppler)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"doppler=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dopplerSeg)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"dopplerSeg=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dopplerSegOffset)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"dopplerSegOffset=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dopplerCrystal)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"dopplerCrystal=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->intpts)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictOutputLN_vectorlEg2IntPtcOallocatorlEg2IntPtgRsPgR),G__defined_typename("vector<g2IntPt>"),-1,1,"intpts=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->waveAll)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictOutputLN_vectorlEshortcOallocatorlEshortgRsPgR),G__defined_typename("vector<Short_t>"),-1,1,"waveAll=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictOutputLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* g2OUT */
static void G__setup_memvarg2OUT(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictOutputLN_g2OUT));
   { g2OUT *p; p=(g2OUT*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->runNumber)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"runNumber=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->xtals)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictOutputLN_vectorlEg2CrystalEventcOallocatorlEg2CrystalEventgRsPgR),G__defined_typename("vector<g2CrystalEvent>"),-1,1,"xtals=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictOutputLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* goddessOut */
static void G__setup_memvargoddessOut(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictOutputLN_goddessOut));
   { goddessOut *p; p=(goddessOut*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->siID)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictOutputLN_vectorlEstringcOallocatorlEstringgRsPgR),G__defined_typename("vector<string>"),-1,1,"siID=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->siType)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictOutputLN_vectorlEstringcOallocatorlEstringgRsPgR),G__defined_typename("vector<string>"),-1,1,"siType=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->si)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictOutputLN_vectorlEdetectorOUTcOallocatorlEdetectorOUTgRsPgR),G__defined_typename("vector<detectorOUT>"),-1,1,"si=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->icDE)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"icDE=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->icE)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"icE=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->icX)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"icX=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->icY)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"icY=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tdc0)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"tdc0=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tdc1)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"tdc1=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tdc2)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"tdc2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tdc3)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"tdc3=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tdc4)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"tdc4=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tdc5)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"tdc5=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictOutputLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* QQQ5 */
static void G__setup_memvarQQQ5(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictOutputLN_QQQ5));
   { QQQ5 *p; p=(QQQ5*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->firstStripWidth)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"firstStripWidth=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->deltaPitch)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"deltaPitch=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->stripsP)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictOutputLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<Int_t>"),-1,1,"stripsP=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->eRawP)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictOutputLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,1,"eRawP=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->eCalP)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictOutputLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,1,"eCalP=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->timeP)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictOutputLN_vectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgR),G__defined_typename("vector<uint64_t>"),-1,1,"timeP=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->stripsN)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictOutputLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<Int_t>"),-1,1,"stripsN=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->eRawN)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictOutputLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,1,"eRawN=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->eCalN)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictOutputLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,1,"eCalN=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->timeN)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictOutputLN_vectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgR),G__defined_typename("vector<uint64_t>"),-1,1,"timeN=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictOutputLN_TVector3),-1,-1,4,"pStripEdgePos[33]=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictOutputLN_TVector3),-1,-1,4,"nStripEdgePos[5]=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictOutputLN_TVector3),-1,-1,4,"pStripCenterPos[32]=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictOutputLN_TVector3),-1,-1,4,"nStripCenterPos[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"binsP[33]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"binsPCenter[32]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"binsN[5]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"binsNCenter[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"binsRho[33]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"binsAzimuthal[5]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"binsPolar[33]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"binsPolarCenter[32]=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictOutputLN_TVector3),-1,-1,4,"eventPos=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictOutputLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* superX3 */
static void G__setup_memvarsuperX3(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictOutputLN_superX3));
   { superX3 *p; p=(superX3*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->activeLength)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"activeLength=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->activeWidth)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"activeWidth=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->stripsP)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictOutputLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<Int_t>"),-1,1,"stripsP=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->eNearRaw)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictOutputLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,1,"eNearRaw=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->eFarRaw)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictOutputLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,1,"eFarRaw=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->eNearCal)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictOutputLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,1,"eNearCal=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->eFarCal)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictOutputLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,1,"eFarCal=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->timeNear)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictOutputLN_vectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgR),G__defined_typename("vector<uint64_t>"),-1,1,"timeNear=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->timeFar)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictOutputLN_vectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgR),G__defined_typename("vector<uint64_t>"),-1,1,"timeFar=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->stripsN)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictOutputLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<Int_t>"),-1,1,"stripsN=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->eRawN)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictOutputLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,1,"eRawN=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->eCalN)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictOutputLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,1,"eCalN=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->timeN)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictOutputLN_vectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgR),G__defined_typename("vector<uint64_t>"),-1,1,"timeN=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictOutputLN_TVector3),-1,-1,4,"pStripEdgePos[5]=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictOutputLN_TVector3),-1,-1,4,"nStripEdgePos[5]=",0,"vector to mid point of edge, in mm ");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictOutputLN_TVector3),-1,-1,4,"pStripCenterPos[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictOutputLN_TVector3),-1,-1,4,"nStripCenterPos[4]=",0,"absolute center, in mm ");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictOutputLN_TVector3),-1,-1,4,"eventPos=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"binsP[5]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"binsPCenter[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"binsN[5]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"binsNCenter[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"binsZ[5]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"binsZCenter[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"binsAzimuthal[5]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"binsAzimuthalCenter[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"binsPolar[5]=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictOutputLN_maplEshortcOfloatcOlesslEshortgRcOallocatorlEpairlEconstsPshortcOfloatgRsPgRsPgR),G__defined_typename("valueMap"),-1,4,"stripPosRaw=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictOutputLN_maplEshortcOfloatcOlesslEshortgRcOallocatorlEpairlEconstsPshortcOfloatgRsPgRsPgR),G__defined_typename("valueMap"),-1,4,"stripPosCal=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"stripChannelMult[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictOutputLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,4,"parStripPosCal[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictOutputLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,4,"parStripECal[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictOutputLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ionChamber */
static void G__setup_memvarionChamber(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictOutputLN_ionChamber));
   { ionChamber *p; p=(ionChamber*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"numAnode=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"numWireX=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"numWireY=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"numDE=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"numEres=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictOutputLN_maplEshortcOfloatcOlesslEshortgRcOallocatorlEpairlEconstsPshortcOfloatgRsPgRsPgR),G__defined_typename("valueMap"),-1,4,"anodeRaw=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictOutputLN_maplEshortcOfloatcOlesslEshortgRcOallocatorlEpairlEconstsPshortcOfloatgRsPgRsPgR),G__defined_typename("valueMap"),-1,4,"anodeCal=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictOutputLN_maplEshortcOfloatcOlesslEshortgRcOallocatorlEpairlEconstsPshortcOfloatgRsPgRsPgR),G__defined_typename("valueMap"),-1,4,"wireX=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictOutputLN_maplEshortcOfloatcOlesslEshortgRcOallocatorlEpairlEconstsPshortcOfloatgRsPgRsPgR),G__defined_typename("valueMap"),-1,4,"wireY=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"dE=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"resE=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"E=",0,"All in MeV");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictOutputLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<Float_t> >"),-1,4,"parAnodeECal=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictOutputLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<Int_t>"),-1,4,"threshAnode=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictOutputLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<Int_t>"),-1,4,"threshX=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictOutputLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<Int_t>"),-1,4,"threshY=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictOutputLN_maplEshortcOshortcOlesslEshortgRcOallocatorlEpairlEconstsPshortcOshortgRsPgRsPgR),G__defined_typename("chMap"),-1,4,"mapAnode=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictOutputLN_maplEshortcOshortcOlesslEshortgRcOallocatorlEpairlEconstsPshortcOshortgRsPgRsPgR),G__defined_typename("chMap"),-1,4,"mapX=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictOutputLN_maplEshortcOshortcOlesslEshortgRcOallocatorlEpairlEconstsPshortcOshortgRsPgRsPgR),G__defined_typename("chMap"),-1,4,"mapY=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictOutputLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* tdc_t */
static void G__setup_memvartdc_t(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictOutputLN_tdc_t));
   { tdc_t *p; p=(tdc_t*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"numChannels=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"tdc0=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"tdc1=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"tdc2=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"tdc3=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"tdc4=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"tdc5=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictOutputLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<Int_t>"),-1,4,"threshTDC=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictOutputLN_maplEshortcOfloatcOlesslEshortgRcOallocatorlEpairlEconstsPshortcOfloatgRsPgRsPgR),G__defined_typename("valueMap"),-1,4,"tdcRaw=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictOutputLN_maplEshortcOfloatcOlesslEshortgRcOallocatorlEpairlEconstsPshortcOfloatgRsPgRsPgR),G__defined_typename("valueMap"),-1,4,"tdcCal=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictOutputLN_maplEshortcOshortcOlesslEshortgRcOallocatorlEpairlEconstsPshortcOshortgRsPgRsPgR),G__defined_typename("chMap"),-1,4,"mapTDC=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictOutputLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* goddessFull */
static void G__setup_memvargoddessFull(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictOutputLN_goddessFull));
   { goddessFull *p; p=(goddessFull*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->buf)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"buf[2048]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->rawGoddess)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__DictOutputLN_goddessEvent),-1,-1,1,"rawGoddess=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->qqs)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictOutputLN_vectorlEQQQ5cOallocatorlEQQQ5gRsPgR),G__defined_typename("vector<QQQ5>"),-1,1,"qqs=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->s3s)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictOutputLN_vectorlEsuperX3cOallocatorlEsuperX3gRsPgR),G__defined_typename("vector<superX3>"),-1,1,"s3s=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->bbs)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictOutputLN_vectorlEBB10cOallocatorlEBB10gRsPgR),G__defined_typename("vector<BB10>"),-1,1,"bbs=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ics)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictOutputLN_vectorlEionChambercOallocatorlEionChambergRsPgR),G__defined_typename("vector<ionChamber>"),-1,1,"ics=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tdcs)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictOutputLN_vectorlEtdc_tcOallocatorlEtdc_tgRsPgR),G__defined_typename("vector<tdc_t>"),-1,1,"tdcs=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->eventOut)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__DictOutputLN_goddessOut),-1,-1,1,"eventOut=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ts)-(long)(p)),107,0,0,-1,G__defined_typename("uint64_t"),-1,1,"ts=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->geomInfo)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictOutputLN_maplEstringcOdoublecOlesslEstringgRcOallocatorlEpairlEconstsPstringcOdoublegRsPgRsPgR),G__defined_typename("map<string,Double_t>"),-1,1,"geomInfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictOutputLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarDictOutput() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncsolidVector(void) {
   /* solidVector */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictOutputLN_solidVector));
   G__memfunc_setup("solidVector",1166,G__DictOutput_455_0_1, 105, G__get_linked_tagnum(&G__DictOutputLN_solidVector), -1, 0, 5, 1, 1, 0, 
"d - 'Double_t' 0 '0' x_ d - 'Double_t' 0 '0' y_ "
"d - 'Double_t' 0 '0' z_ d - 'Double_t' 0 '0' rot_Z "
"d - 'Double_t' 0 '0' rot_Phi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRotZ",687,G__DictOutput_455_0_2, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRotPhi",886,G__DictOutput_455_0_3, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRotationZ",1238,G__DictOutput_455_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - angle", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRotationPhi",1437,G__DictOutput_455_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - angle", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTVector3",1050,G__DictOutput_455_0_6, 117, G__get_linked_tagnum(&G__DictOutputLN_TVector3), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__DictOutput_455_0_7, 85, G__get_linked_tagnum(&G__DictOutputLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&solidVector::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__DictOutput_455_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&solidVector::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__DictOutput_455_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&solidVector::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__DictOutput_455_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&solidVector::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DictOutputLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__DictOutput_455_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__DictOutput_455_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&solidVector::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__DictOutput_455_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&solidVector::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__DictOutput_455_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&solidVector::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__DictOutput_455_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&solidVector::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("solidVector", 1166, G__DictOutput_455_0_19, (int) ('i'), G__get_linked_tagnum(&G__DictOutputLN_solidVector), -1, 0, 1, 1, 1, 0, "u 'solidVector' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~solidVector", 1292, G__DictOutput_455_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__DictOutput_455_0_21, (int) ('u'), G__get_linked_tagnum(&G__DictOutputLN_solidVector), -1, 1, 1, 1, 1, 0, "u 'solidVector' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncgoddessEvent(void) {
   /* goddessEvent */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictOutputLN_goddessEvent));
   // automatic default constructor
   G__memfunc_setup("goddessEvent", 1259, G__DictOutput_456_0_1, (int) ('i'), G__get_linked_tagnum(&G__DictOutputLN_goddessEvent), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("goddessEvent", 1259, G__DictOutput_456_0_2, (int) ('i'), G__get_linked_tagnum(&G__DictOutputLN_goddessEvent), -1, 0, 1, 1, 1, 0, "u 'goddessEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~goddessEvent", 1385, G__DictOutput_456_0_3, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__DictOutput_456_0_4, (int) ('u'), G__get_linked_tagnum(&G__DictOutputLN_goddessEvent), -1, 1, 1, 1, 1, 0, "u 'goddessEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncorrubaDet(void) {
   /* orrubaDet */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictOutputLN_orrubaDet));
   G__memfunc_setup("Clear",487,G__DictOutput_457_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSerialNum",1200,G__DictOutput_457_0_4, 117, G__get_linked_tagnum(&G__DictOutputLN_string), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPosID",735,G__DictOutput_457_0_5, 117, G__get_linked_tagnum(&G__DictOutputLN_string), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSector",912,G__DictOutput_457_0_6, 114, -1, G__defined_typename("UShort_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDepth",789,G__DictOutput_457_0_7, 114, -1, G__defined_typename("UShort_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetUpStream",1105,G__DictOutput_457_0_8, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDetector",1126,G__DictOutput_457_0_9, 121, -1, -1, 0, 5, 1, 1, 0, 
"u 'string' - 0 - serial_Num r - 'UShort_t' 0 - sector_ "
"r - 'UShort_t' 0 - depth_ g - 'Bool_t' 0 - upstream_ "
"u 'solidVector' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetChannelMap",1283,G__DictOutput_457_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'map<short,short,less<short>,allocator<pair<const short,short> > >' 'map<Short_t,Short_t>' 0 - channelMap g - 'Bool_t' 0 - nType", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetChannelMap",1271,G__DictOutput_457_0_11, 117, G__get_linked_tagnum(&G__DictOutputLN_maplEshortcOshortcOlesslEshortgRcOallocatorlEpairlEconstsPshortcOshortgRsPgRsPgR), G__defined_typename("map<Short_t,Short_t>"), 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - nType", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNumChannels",1416,G__DictOutput_457_0_12, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - pType i - 'Int_t' 0 '0' nType", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumChannels",1404,G__DictOutput_457_0_13, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - nType", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ValidChannel",1193,G__DictOutput_457_0_14, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - channel g - 'Bool_t' 0 - nType", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ChannelHit",990,G__DictOutput_457_0_15, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - detChannel g - 'Bool_t' 0 - nType", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadEvent",898,G__DictOutput_457_0_16, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'goddessEvent' - 0 - ev g - 'Bool_t' 0 - ignoreThresholds", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("SetRawEValue",1176,G__DictOutput_457_0_17, 121, -1, -1, 0, 3, 1, 1, 0, 
"h - 'UInt_t' 0 - detChannel h - 'UInt_t' 0 - rawValue "
"i - 'Int_t' 0 - ignoreThresh", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetRawEValue",1176,G__DictOutput_457_0_18, 121, -1, -1, 0, 4, 1, 1, 0, 
"h - 'UInt_t' 0 - detChannel g - 'Bool_t' 0 - nType "
"h - 'UInt_t' 0 - rawValue i - 'Int_t' 0 - ignoreThresh", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetRawEValue",1164,G__DictOutput_457_0_19, 102, -1, G__defined_typename("Float_t"), 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - detChannel g - 'Bool_t' 0 - nType", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetCalEValue",1138,G__DictOutput_457_0_20, 102, -1, G__defined_typename("Float_t"), 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - detChannel g - 'Bool_t' 0 - nType", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetRawE",655,G__DictOutput_457_0_21, 117, G__get_linked_tagnum(&G__DictOutputLN_maplEshortcOfloatcOlesslEshortgRcOallocatorlEpairlEconstsPshortcOfloatgRsPgRsPgR), G__defined_typename("orrubaDet::valueMap"), 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - nType", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetCalE",629,G__DictOutput_457_0_22, 117, G__get_linked_tagnum(&G__DictOutputLN_maplEshortcOfloatcOlesslEshortgRcOallocatorlEpairlEconstsPshortcOfloatgRsPgRsPgR), G__defined_typename("orrubaDet::valueMap"), 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - nType", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTimestamp",1248,G__DictOutput_457_0_23, 121, -1, -1, 0, 3, 1, 1, 0, 
"h - 'UInt_t' 0 - detChannel g - 'Bool_t' 0 - nType "
"k - 'uint64_t' 0 - timestamp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTimestamp",1236,G__DictOutput_457_0_24, 107, -1, G__defined_typename("uint64_t"), 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - detChannel g - 'Bool_t' 0 - nType", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTSmap",773,G__DictOutput_457_0_25, 117, G__get_linked_tagnum(&G__DictOutputLN_maplEshortcOunsignedsPlongcOlesslEshortgRcOallocatorlEpairlEconstsPshortcOunsignedsPlonggRsPgRsPgR), G__defined_typename("orrubaDet::timeMap"), 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - nType", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetECalParameters",1685,G__DictOutput_457_0_26, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"u 'vector<float,allocator<float> >' 'vector<Float_t>' 0 - par i - 'Int_t' 0 - contact "
"g - 'Bool_t' 0 - nType", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetECalParameters",1673,G__DictOutput_457_0_27, 117, G__get_linked_tagnum(&G__DictOutputLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR), G__defined_typename("vector<std::vector<Float_t> >"), 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - nType", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetThresholds",1356,G__DictOutput_457_0_28, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"u 'vector<int,allocator<int> >' 'vector<Int_t>' 0 - thresholds g - 'Bool_t' 0 - nType "
"i - 'Int_t' 0 - thrSize", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetThresholds",1344,G__DictOutput_457_0_29, 117, G__get_linked_tagnum(&G__DictOutputLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<Int_t>"), 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - nType", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SortAndCalibrate",1602,G__DictOutput_457_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' doCalibrate", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetEventPosition",1655,G__DictOutput_457_0_31, 117, G__get_linked_tagnum(&G__DictOutputLN_TVector3), -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' calibrated", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetMaxHitInfo",1271,G__DictOutput_457_0_32, 121, -1, -1, 0, 5, 1, 1, 0, 
"I - 'Int_t' 0 - stripMaxP K - 'uint64_t' 0 - timestampMaxP "
"I - 'Int_t' 0 - stripMaxN K - 'uint64_t' 0 - timestampMaxN "
"g - 'Bool_t' 0 'kTRUE' calibrated", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetChannelMult",1403,G__DictOutput_457_0_33, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' calibrated", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetChannelMult",1403,G__DictOutput_457_0_34, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"g - 'Bool_t' 0 - nType g - 'Bool_t' 0 - calibrated", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetESum",666,G__DictOutput_457_0_35, 102, -1, G__defined_typename("Float_t"), 0, 2, 1, 1, 0, 
"g - 'Bool_t' 0 'kFALSE' nType g - 'Bool_t' 0 'kTRUE' calibrated", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("SetPosID",747,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__DictOutput_457_0_37, 85, G__get_linked_tagnum(&G__DictOutputLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&orrubaDet::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__DictOutput_457_0_38, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&orrubaDet::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__DictOutput_457_0_39, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&orrubaDet::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__DictOutput_457_0_40, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&orrubaDet::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DictOutputLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__DictOutput_457_0_44, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__DictOutput_457_0_45, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&orrubaDet::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__DictOutput_457_0_46, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&orrubaDet::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__DictOutput_457_0_47, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&orrubaDet::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__DictOutput_457_0_48, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&orrubaDet::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~orrubaDet", 1062, G__DictOutput_457_0_49, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__DictOutput_457_0_50, (int) ('u'), G__get_linked_tagnum(&G__DictOutputLN_orrubaDet), -1, 1, 1, 1, 1, 0, "u 'orrubaDet' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncBB10(void) {
   /* BB10 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictOutputLN_BB10));
   G__memfunc_setup("BB10",229,G__DictOutput_489_0_1, 105, G__get_linked_tagnum(&G__DictOutputLN_BB10), -1, 0, 0, 1, 1, 0, "", "to match sx3 treatment", (void*) NULL, 0);
   G__memfunc_setup("BB10",229,G__DictOutput_489_0_2, 105, G__get_linked_tagnum(&G__DictOutputLN_BB10), -1, 0, 5, 1, 1, 0, 
"u 'string' - 0 - serial_Num r - 'UShort_t' 0 - sector_ "
"r - 'UShort_t' 0 - depth_ g - 'Bool_t' 0 - upstream_ "
"u 'solidVector' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetGeomParameters",1736,G__DictOutput_489_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "u 'map<string,double,less<string>,allocator<pair<const string,double> > >' 'map<string,Double_t>' 0 - geoInfo", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPStripCenterPos",1813,G__DictOutput_489_0_5, 117, G__get_linked_tagnum(&G__DictOutputLN_TVector3), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - strip", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumBins",988,G__DictOutput_489_0_6, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPTypeBins",1182,G__DictOutput_489_0_7, 70, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAzimuthalBins",1627,G__DictOutput_489_0_8, 70, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPTypeBinCenters",1791,G__DictOutput_489_0_9, 70, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAzimuthalBinCenters",2236,G__DictOutput_489_0_10, 70, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ConstructBins",1361,G__DictOutput_489_0_11, 121, -1, -1, 0, 0, 1, 1, 0, "", "glw 14iii2019", (void*) NULL, 1);
   G__memfunc_setup("GetChannelMult",1403,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' calibrated", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetChannelMult",1403,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"g - 'Bool_t' 0 - nType g - 'Bool_t' 0 - calibrated", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetESum",666,(G__InterfaceMethod) NULL,102, -1, G__defined_typename("Float_t"), 0, 2, 1, 1, 0, 
"g - 'Bool_t' 0 'kFALSE' nType g - 'Bool_t' 0 'kTRUE' calibrated", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("LoadEvent",898,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"U 'goddessEvent' - 0 - ev g - 'Bool_t' 0 - ignoreThresholds", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetRawEValue",1176,(G__InterfaceMethod) NULL,121, -1, -1, 0, 4, 1, 1, 0, 
"h - 'UInt_t' 0 - detChannel g - 'Bool_t' 0 - nType "
"h - 'UInt_t' 0 - rawValue i - 'Int_t' 0 - ignoreThresh", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SortAndCalibrate",1602,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' doCalibrate", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMaxHitInfo",1271,(G__InterfaceMethod) NULL,121, -1, -1, 0, 5, 1, 1, 0, 
"I - 'Int_t' 0 - stripMaxP K - 'uint64_t' 0 - timestampMaxP "
"I - 'Int_t' 0 - stripMaxN K - 'uint64_t' 0 - timestampMaxN "
"g - 'Bool_t' 0 'kTRUE' calibrated", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetEventPosition",1655,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__DictOutputLN_TVector3), -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' calibrated", "{ ; } glw 14iii19*/", (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__DictOutput_489_0_20, 85, G__get_linked_tagnum(&G__DictOutputLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&BB10::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__DictOutput_489_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&BB10::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__DictOutput_489_0_22, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&BB10::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__DictOutput_489_0_23, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&BB10::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DictOutputLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__DictOutput_489_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__DictOutput_489_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&BB10::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__DictOutput_489_0_29, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&BB10::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__DictOutput_489_0_30, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&BB10::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__DictOutput_489_0_31, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&BB10::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("BB10", 229, G__DictOutput_489_0_32, (int) ('i'), G__get_linked_tagnum(&G__DictOutputLN_BB10), -1, 0, 1, 1, 1, 0, "u 'BB10' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~BB10", 355, G__DictOutput_489_0_33, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__DictOutput_489_0_34, (int) ('u'), G__get_linked_tagnum(&G__DictOutputLN_BB10), -1, 1, 1, 1, 1, 0, "u 'BB10' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncdetectorOUT(void) {
   /* detectorOUT */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictOutputLN_detectorOUT));
   // automatic default constructor
   G__memfunc_setup("detectorOUT", 1106, G__DictOutput_490_0_1, (int) ('i'), G__get_linked_tagnum(&G__DictOutputLN_detectorOUT), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("detectorOUT", 1106, G__DictOutput_490_0_2, (int) ('i'), G__get_linked_tagnum(&G__DictOutputLN_detectorOUT), -1, 0, 1, 1, 1, 0, "u 'detectorOUT' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~detectorOUT", 1232, G__DictOutput_490_0_3, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__DictOutput_490_0_4, (int) ('u'), G__get_linked_tagnum(&G__DictOutputLN_detectorOUT), -1, 1, 1, 1, 1, 0, "u 'detectorOUT' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncg2IntPt(void) {
   /* g2IntPt */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictOutputLN_g2IntPt));
   G__memfunc_setup("g2IntPt",648,G__DictOutput_530_0_1, 105, G__get_linked_tagnum(&G__DictOutputLN_g2IntPt), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__DictOutput_530_0_2, 85, G__get_linked_tagnum(&G__DictOutputLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&g2IntPt::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__DictOutput_530_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&g2IntPt::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__DictOutput_530_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&g2IntPt::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__DictOutput_530_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&g2IntPt::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DictOutputLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__DictOutput_530_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__DictOutput_530_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&g2IntPt::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__DictOutput_530_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&g2IntPt::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__DictOutput_530_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&g2IntPt::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__DictOutput_530_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&g2IntPt::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("g2IntPt", 648, G__DictOutput_530_0_14, (int) ('i'), G__get_linked_tagnum(&G__DictOutputLN_g2IntPt), -1, 0, 1, 1, 1, 0, "u 'g2IntPt' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~g2IntPt", 774, G__DictOutput_530_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__DictOutput_530_0_16, (int) ('u'), G__get_linked_tagnum(&G__DictOutputLN_g2IntPt), -1, 1, 1, 1, 1, 0, "u 'g2IntPt' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncg2CrystalEvent(void) {
   /* g2CrystalEvent */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictOutputLN_g2CrystalEvent));
   G__memfunc_setup("g2CrystalEvent",1405,G__DictOutput_531_0_1, 105, G__get_linked_tagnum(&G__DictOutputLN_g2CrystalEvent), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Reset",515,G__DictOutput_531_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("numIntPts",946,G__DictOutput_531_0_3, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("numSegHit",916,G__DictOutput_531_0_4, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("segsHitAboveThresh",1842,G__DictOutput_531_0_5, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "f - 'Float_t' 0 - thresh", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("averageIntPtsPerSeg",1923,G__DictOutput_531_0_6, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("segSumRaw",926,G__DictOutput_531_0_7, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("segSumRawThresh",1548,G__DictOutput_531_0_8, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "f - 'Float_t' 0 - thresh", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("maxIntPtXYZ",1088,G__DictOutput_531_0_9, 117, G__get_linked_tagnum(&G__DictOutputLN_TVector3), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("maxIntPtX",909,G__DictOutput_531_0_10, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("maxIntPtY",910,G__DictOutput_531_0_11, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("maxIntPtZ",911,G__DictOutput_531_0_12, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("maxIntPtR",903,G__DictOutput_531_0_13, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("maxIntPtXYZLab",1359,G__DictOutput_531_0_14, 117, G__get_linked_tagnum(&G__DictOutputLN_TVector3), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("maxIntPtXYZLabSeg",1646,G__DictOutput_531_0_15, 117, G__get_linked_tagnum(&G__DictOutputLN_TVector3), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("maxIntPtXYZLabCrystal",2097,G__DictOutput_531_0_16, 117, G__get_linked_tagnum(&G__DictOutputLN_TVector3), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("maxIntPtE",890,G__DictOutput_531_0_17, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("maxIntPtSegNum",1412,G__DictOutput_531_0_18, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("maxIntPtSegE",1177,G__DictOutput_531_0_19, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("gTheta",605,G__DictOutput_531_0_20, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("gPhi",392,G__DictOutput_531_0_21, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CosDop",584,G__DictOutput_531_0_22, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("cDoppler",825,G__DictOutput_531_0_23, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "f - 'Float_t' 0 - beta", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("cDopplerSeg",1112,G__DictOutput_531_0_24, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "f - 'Float_t' 0 - beta", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("cDopplerCrystal",1563,G__DictOutput_531_0_25, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "f - 'Float_t' 0 - beta", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__DictOutput_531_0_26, 85, G__get_linked_tagnum(&G__DictOutputLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&g2CrystalEvent::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__DictOutput_531_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&g2CrystalEvent::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__DictOutput_531_0_28, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&g2CrystalEvent::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__DictOutput_531_0_29, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&g2CrystalEvent::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DictOutputLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__DictOutput_531_0_33, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__DictOutput_531_0_34, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&g2CrystalEvent::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__DictOutput_531_0_35, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&g2CrystalEvent::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__DictOutput_531_0_36, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&g2CrystalEvent::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__DictOutput_531_0_37, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&g2CrystalEvent::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("g2CrystalEvent", 1405, G__DictOutput_531_0_38, (int) ('i'), G__get_linked_tagnum(&G__DictOutputLN_g2CrystalEvent), -1, 0, 1, 1, 1, 0, "u 'g2CrystalEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~g2CrystalEvent", 1531, G__DictOutput_531_0_39, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__DictOutput_531_0_40, (int) ('u'), G__get_linked_tagnum(&G__DictOutputLN_g2CrystalEvent), -1, 1, 1, 1, 1, 0, "u 'g2CrystalEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncg2OUT(void) {
   /* g2OUT */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictOutputLN_g2OUT));
   G__memfunc_setup("g2OUT",401,G__DictOutput_536_0_1, 105, G__get_linked_tagnum(&G__DictOutputLN_g2OUT), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Reset",515,G__DictOutput_536_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("calorimeterDoppler",1901,G__DictOutput_536_0_3, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "f - 'Float_t' 0 - beta", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("calorimeterE",1244,G__DictOutput_536_0_4, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "f - 'Float_t' 0 - thresh", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("calorimeterE",1244,G__DictOutput_536_0_5, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("crystalMult",1188,G__DictOutput_536_0_6, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__DictOutput_536_0_7, 85, G__get_linked_tagnum(&G__DictOutputLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&g2OUT::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__DictOutput_536_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&g2OUT::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__DictOutput_536_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&g2OUT::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__DictOutput_536_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&g2OUT::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DictOutputLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__DictOutput_536_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__DictOutput_536_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&g2OUT::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__DictOutput_536_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&g2OUT::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__DictOutput_536_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&g2OUT::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__DictOutput_536_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&g2OUT::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("g2OUT", 401, G__DictOutput_536_0_19, (int) ('i'), G__get_linked_tagnum(&G__DictOutputLN_g2OUT), -1, 0, 1, 1, 1, 0, "u 'g2OUT' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~g2OUT", 527, G__DictOutput_536_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__DictOutput_536_0_21, (int) ('u'), G__get_linked_tagnum(&G__DictOutputLN_g2OUT), -1, 1, 1, 1, 1, 0, "u 'g2OUT' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncgoddessOut(void) {
   /* goddessOut */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictOutputLN_goddessOut));
   G__memfunc_setup("goddessOut",1057,G__DictOutput_541_0_1, 105, G__get_linked_tagnum(&G__DictOutputLN_goddessOut), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__DictOutput_541_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__DictOutput_541_0_3, 85, G__get_linked_tagnum(&G__DictOutputLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&goddessOut::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__DictOutput_541_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&goddessOut::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__DictOutput_541_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&goddessOut::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__DictOutput_541_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&goddessOut::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DictOutputLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__DictOutput_541_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__DictOutput_541_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&goddessOut::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__DictOutput_541_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&goddessOut::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__DictOutput_541_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&goddessOut::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__DictOutput_541_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&goddessOut::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("goddessOut", 1057, G__DictOutput_541_0_15, (int) ('i'), G__get_linked_tagnum(&G__DictOutputLN_goddessOut), -1, 0, 1, 1, 1, 0, "u 'goddessOut' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~goddessOut", 1183, G__DictOutput_541_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__DictOutput_541_0_17, (int) ('u'), G__get_linked_tagnum(&G__DictOutputLN_goddessOut), -1, 1, 1, 1, 1, 0, "u 'goddessOut' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncQQQ5(void) {
   /* QQQ5 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictOutputLN_QQQ5));
   G__memfunc_setup("QQQ5",296,G__DictOutput_550_0_1, 105, G__get_linked_tagnum(&G__DictOutputLN_QQQ5), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("QQQ5",296,G__DictOutput_550_0_2, 105, G__get_linked_tagnum(&G__DictOutputLN_QQQ5), -1, 0, 5, 1, 1, 0, 
"u 'string' - 0 - serial_Num r - 'UShort_t' 0 - sector_ "
"r - 'UShort_t' 0 - depth_ g - 'Bool_t' 0 - upstream_ "
"u 'solidVector' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__DictOutput_550_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetGeomParameters",1736,G__DictOutput_550_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "u 'map<string,double,less<string>,allocator<pair<const string,double> > >' 'map<string,Double_t>' 0 - geoInfo", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPStripCenterPos",1813,G__DictOutput_550_0_5, 117, G__get_linked_tagnum(&G__DictOutputLN_TVector3), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - strip", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNStripCenterPos",1811,G__DictOutput_550_0_6, 85, G__get_linked_tagnum(&G__DictOutputLN_TVector3), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumNTypeBins",1484,G__DictOutput_550_0_7, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumPTypeBins",1486,G__DictOutput_550_0_8, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPTypeBins",1182,G__DictOutput_550_0_9, 70, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPTypeBinsCenter",1791,G__DictOutput_550_0_10, 70, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNTypeBins",1180,G__DictOutput_550_0_11, 70, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNTypeBinsCenter",1789,G__DictOutput_550_0_12, 70, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRhoBins",981,G__DictOutput_550_0_13, 70, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAzimuthalBins",1627,G__DictOutput_550_0_14, 70, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPolarBins",1194,G__DictOutput_550_0_15, 70, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPolarBinsCenter",1803,G__DictOutput_550_0_16, 70, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ConstructBins",1361,G__DictOutput_550_0_17, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetChannelMult",1403,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' calibrated", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetChannelMult",1403,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"g - 'Bool_t' 0 - nType g - 'Bool_t' 0 - calibrated", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetESum",666,(G__InterfaceMethod) NULL,102, -1, G__defined_typename("Float_t"), 0, 2, 1, 1, 0, 
"g - 'Bool_t' 0 'kFALSE' nType g - 'Bool_t' 0 'kTRUE' calibrated", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("LoadEvent",898,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"U 'goddessEvent' - 0 - ev g - 'Bool_t' 0 - ignoreThresholds", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetRawEValue",1176,(G__InterfaceMethod) NULL,121, -1, -1, 0, 4, 1, 1, 0, 
"h - 'UInt_t' 0 - detChannel g - 'Bool_t' 0 - nType "
"h - 'UInt_t' 0 - rawValue i - 'Int_t' 0 - ignoreThresh", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SortAndCalibrate",1602,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - doCalibrate", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMaxHitInfo",1271,(G__InterfaceMethod) NULL,121, -1, -1, 0, 5, 1, 1, 0, 
"I - 'Int_t' 0 - stripMaxP K - 'uint64_t' 0 - timestampMaxP "
"I - 'Int_t' 0 - stripMaxN K - 'uint64_t' 0 - timestampMaxN "
"g - 'Bool_t' 0 'kTRUE' calibrated", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetEventPosition",1655,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__DictOutputLN_TVector3), -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' calibrated", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetPosID",747,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__DictOutput_550_0_27, 85, G__get_linked_tagnum(&G__DictOutputLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&QQQ5::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__DictOutput_550_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&QQQ5::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__DictOutput_550_0_29, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&QQQ5::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__DictOutput_550_0_30, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&QQQ5::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DictOutputLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__DictOutput_550_0_34, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__DictOutput_550_0_35, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&QQQ5::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__DictOutput_550_0_36, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&QQQ5::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__DictOutput_550_0_37, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&QQQ5::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__DictOutput_550_0_38, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&QQQ5::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("QQQ5", 296, G__DictOutput_550_0_39, (int) ('i'), G__get_linked_tagnum(&G__DictOutputLN_QQQ5), -1, 0, 1, 1, 1, 0, "u 'QQQ5' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~QQQ5", 422, G__DictOutput_550_0_40, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__DictOutput_550_0_41, (int) ('u'), G__get_linked_tagnum(&G__DictOutputLN_QQQ5), -1, 1, 1, 1, 1, 0, "u 'QQQ5' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncsuperX3(void) {
   /* superX3 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictOutputLN_superX3));
   G__memfunc_setup("superX3",698,G__DictOutput_551_0_1, 105, G__get_linked_tagnum(&G__DictOutputLN_superX3), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("superX3",698,G__DictOutput_551_0_2, 105, G__get_linked_tagnum(&G__DictOutputLN_superX3), -1, 0, 5, 1, 1, 0, 
"u 'string' - 0 - serial_Num r - 'UShort_t' 0 - sector_ "
"r - 'UShort_t' 0 - depth_ g - 'Bool_t' 0 - upstream_ "
"u 'solidVector' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__DictOutput_551_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetGeomParameters",1736,G__DictOutput_551_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "u 'map<string,double,less<string>,allocator<pair<const string,double> > >' 'map<string,Double_t>' 0 - geoInfo", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPStripCenterPos",1813,G__DictOutput_551_0_5, 117, G__get_linked_tagnum(&G__DictOutputLN_TVector3), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - strip", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNStripCenterPos",1811,G__DictOutput_551_0_6, 117, G__get_linked_tagnum(&G__DictOutputLN_TVector3), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - strip", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumBins",988,G__DictOutput_551_0_7, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPtypeBins",1214,G__DictOutput_551_0_8, 70, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNtypeBins",1212,G__DictOutput_551_0_9, 70, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPtypeCenterBins",1823,G__DictOutput_551_0_10, 70, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNtypeCenterBins",1821,G__DictOutput_551_0_11, 70, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetZbins",806,G__DictOutput_551_0_12, 70, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetZCenterBins",1383,G__DictOutput_551_0_13, 70, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAzimuthalBins",1627,G__DictOutput_551_0_14, 70, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAzimuthalCenterBins",2236,G__DictOutput_551_0_15, 70, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPolarBins",1194,G__DictOutput_551_0_16, 70, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ConstructBins",1361,G__DictOutput_551_0_17, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ValidStrip",1026,G__DictOutput_551_0_18, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "r - 'UShort_t' 0 - strip", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetStrip",818,G__DictOutput_551_0_19, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - channel", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNearChannel",1375,G__DictOutput_551_0_20, 114, -1, G__defined_typename("UShort_t"), 0, 1, 1, 1, 0, "r - 'UShort_t' 0 - strip", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFarChannel",1266,G__DictOutput_551_0_21, 114, -1, G__defined_typename("UShort_t"), 0, 1, 1, 1, 0, "r - 'UShort_t' 0 - strip", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNearE",747,G__DictOutput_551_0_22, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' calibrated", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFarE",638,G__DictOutput_551_0_23, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' calibrated", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UpdatePosition",1464,G__DictOutput_551_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "r - 'UShort_t' 0 - strip", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetStripPosRaw",1422,G__DictOutput_551_0_25, 117, G__get_linked_tagnum(&G__DictOutputLN_maplEshortcOfloatcOlesslEshortgRcOallocatorlEpairlEconstsPshortcOfloatgRsPgRsPgR), G__defined_typename("orrubaDet::valueMap"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetStripPosCal",1396,G__DictOutput_551_0_26, 117, G__get_linked_tagnum(&G__DictOutputLN_maplEshortcOfloatcOlesslEshortgRcOallocatorlEpairlEconstsPshortcOfloatgRsPgRsPgR), G__defined_typename("orrubaDet::valueMap"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetStripPosCalParameters",2452,G__DictOutput_551_0_27, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - strip u 'vector<float,allocator<float> >' 'vector<Float_t>' 0 - pars", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetStripECalParameters",2215,G__DictOutput_551_0_28, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - strip u 'vector<float,allocator<float> >' 'vector<Float_t>' 0 - pars", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetResStripParCal",1679,G__DictOutput_551_0_29, 85, G__get_linked_tagnum(&G__DictOutputLN_vectorlEfloatcOallocatorlEfloatgRsPgR), G__defined_typename("vector<Float_t>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetChannelMult",1403,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' calibrated", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetChannelMult",1403,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"g - 'Bool_t' 0 - nType g - 'Bool_t' 0 - calibrated", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetResE",655,G__DictOutput_551_0_32, 117, G__get_linked_tagnum(&G__DictOutputLN_vectorlEfloatcOallocatorlEfloatgRsPgR), G__defined_typename("vector<Float_t>"), 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' calibrated", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadEvent",898,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"U 'goddessEvent' - 0 - ev g - 'Bool_t' 0 - ignoreThresholds", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetRawEValue",1176,(G__InterfaceMethod) NULL,121, -1, -1, 0, 4, 1, 1, 0, 
"h - 'UInt_t' 0 - detChannel g - 'Bool_t' 0 - nType "
"h - 'UInt_t' 0 - rawValue i - 'Int_t' 0 - ignoreThresh", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SortAndCalibrate",1602,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - doCalibrate", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetESum",666,(G__InterfaceMethod) NULL,102, -1, G__defined_typename("Float_t"), 0, 2, 1, 1, 0, 
"g - 'Bool_t' 0 'kFALSE' nType g - 'Bool_t' 0 'kTRUE' calibrated", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMaxHitInfo",1271,(G__InterfaceMethod) NULL,121, -1, -1, 0, 5, 1, 1, 0, 
"I - 'Int_t' 0 - stripMaxP K - 'uint64_t' 0 - timestampMaxP "
"I - 'Int_t' 0 - stripMaxN K - 'uint64_t' 0 - timestampMaxN "
"g - 'Bool_t' 0 'kTRUE' calibrated", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetEventPosition",1655,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__DictOutputLN_TVector3), -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' calibrated", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__DictOutput_551_0_39, 85, G__get_linked_tagnum(&G__DictOutputLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&superX3::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__DictOutput_551_0_40, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&superX3::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__DictOutput_551_0_41, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&superX3::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__DictOutput_551_0_42, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&superX3::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DictOutputLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__DictOutput_551_0_46, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__DictOutput_551_0_47, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&superX3::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__DictOutput_551_0_48, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&superX3::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__DictOutput_551_0_49, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&superX3::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__DictOutput_551_0_50, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&superX3::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("superX3", 698, G__DictOutput_551_0_51, (int) ('i'), G__get_linked_tagnum(&G__DictOutputLN_superX3), -1, 0, 1, 1, 1, 0, "u 'superX3' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~superX3", 824, G__DictOutput_551_0_52, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__DictOutput_551_0_53, (int) ('u'), G__get_linked_tagnum(&G__DictOutputLN_superX3), -1, 1, 1, 1, 1, 0, "u 'superX3' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncionChamber(void) {
   /* ionChamber */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictOutputLN_ionChamber));
   G__memfunc_setup("ionChamber",1016,G__DictOutput_552_0_1, 105, G__get_linked_tagnum(&G__DictOutputLN_ionChamber), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ionChamber",1016,G__DictOutput_552_0_2, 105, G__get_linked_tagnum(&G__DictOutputLN_ionChamber), -1, 0, 5, 1, 1, 0, 
"i - 'Int_t' 0 - numAnode i - 'Int_t' 0 - numWireX "
"i - 'Int_t' 0 - numWireY i - 'Int_t' 0 - numDE "
"i - 'Int_t' 0 - numEres", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__DictOutput_552_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetChannelMap",1283,G__DictOutput_552_0_4, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'map<short,short,less<short>,allocator<pair<const short,short> > >' 'map<Short_t,Short_t>' 0 - channelMap i - 'Int_t' 0 - chType", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetChannelMap",1271,G__DictOutput_552_0_5, 117, G__get_linked_tagnum(&G__DictOutputLN_maplEshortcOshortcOlesslEshortgRcOallocatorlEpairlEconstsPshortcOshortgRsPgRsPgR), G__defined_typename("map<Short_t,Short_t>"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - chType", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ValidChannel",1193,G__DictOutput_552_0_6, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - channel i - 'Int_t' 0 - chType", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRawValue",1107,G__DictOutput_552_0_7, 121, -1, -1, 0, 4, 1, 1, 0, 
"h - 'UInt_t' 0 - channel i - 'Int_t' 0 - chType "
"h - 'UInt_t' 0 - rawValue i - 'Int_t' 0 - ignoreThresh", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetThresholds",1356,G__DictOutput_552_0_8, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"u 'vector<int,allocator<int> >' 'vector<Int_t>' 0 - thresholds i - 'Int_t' 0 - chType", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetThresholds",1344,G__DictOutput_552_0_9, 117, G__get_linked_tagnum(&G__DictOutputLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<Int_t>"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - chType", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadEvent",898,G__DictOutput_552_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'goddessEvent' - 0 - ev g - 'Bool_t' 0 - ignoreThresholds", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumChannels",1404,G__DictOutput_552_0_11, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - chType", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAnodeDE",912,G__DictOutput_552_0_12, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAnodeResE",1142,G__DictOutput_552_0_13, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAnodeE",844,G__DictOutput_552_0_14, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMaxX",670,G__DictOutput_552_0_15, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMaxY",671,G__DictOutput_552_0_16, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__DictOutput_552_0_17, 85, G__get_linked_tagnum(&G__DictOutputLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ionChamber::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__DictOutput_552_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ionChamber::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__DictOutput_552_0_19, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ionChamber::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__DictOutput_552_0_20, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ionChamber::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DictOutputLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__DictOutput_552_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__DictOutput_552_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ionChamber::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__DictOutput_552_0_26, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ionChamber::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__DictOutput_552_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ionChamber::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__DictOutput_552_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ionChamber::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("ionChamber", 1016, G__DictOutput_552_0_29, (int) ('i'), G__get_linked_tagnum(&G__DictOutputLN_ionChamber), -1, 0, 1, 1, 1, 0, "u 'ionChamber' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ionChamber", 1142, G__DictOutput_552_0_30, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__DictOutput_552_0_31, (int) ('u'), G__get_linked_tagnum(&G__DictOutputLN_ionChamber), -1, 1, 1, 1, 1, 0, "u 'ionChamber' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfunctdc_t(void) {
   /* tdc_t */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictOutputLN_tdc_t));
   G__memfunc_setup("tdc_t",526,G__DictOutput_553_0_1, 105, G__get_linked_tagnum(&G__DictOutputLN_tdc_t), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("tdc_t",526,G__DictOutput_553_0_2, 105, G__get_linked_tagnum(&G__DictOutputLN_tdc_t), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - numChannels", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__DictOutput_553_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetChannelMap",1283,G__DictOutput_553_0_4, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'map<short,short,less<short>,allocator<pair<const short,short> > >' 'map<Short_t,Short_t>' 0 - channelMap i - 'Int_t' 0 - chType", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetChannelMap",1271,G__DictOutput_553_0_5, 117, G__get_linked_tagnum(&G__DictOutputLN_maplEshortcOshortcOlesslEshortgRcOallocatorlEpairlEconstsPshortcOshortgRsPgRsPgR), G__defined_typename("map<Short_t,Short_t>"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - chType", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ValidChannel",1193,G__DictOutput_553_0_6, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - channel i - 'Int_t' 0 - chType", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRawValue",1107,G__DictOutput_553_0_7, 121, -1, -1, 0, 4, 1, 1, 0, 
"h - 'UInt_t' 0 - channel i - 'Int_t' 0 - chType "
"h - 'UInt_t' 0 - rawValue i - 'Int_t' 0 - ignoreThresh", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetThresholds",1356,G__DictOutput_553_0_8, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"u 'vector<int,allocator<int> >' 'vector<Int_t>' 0 - thresholds i - 'Int_t' 0 - chType", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetThresholds",1344,G__DictOutput_553_0_9, 117, G__get_linked_tagnum(&G__DictOutputLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<Int_t>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadEvent",898,G__DictOutput_553_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'goddessEvent' - 0 - ev g - 'Bool_t' 0 - ignoreThresholds", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTDCValue",1016,G__DictOutput_553_0_11, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - channel", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTDCValue",1028,G__DictOutput_553_0_12, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - channel i - 'Int_t' 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__DictOutput_553_0_13, 85, G__get_linked_tagnum(&G__DictOutputLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&tdc_t::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__DictOutput_553_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&tdc_t::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__DictOutput_553_0_15, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&tdc_t::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__DictOutput_553_0_16, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&tdc_t::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DictOutputLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__DictOutput_553_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__DictOutput_553_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&tdc_t::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__DictOutput_553_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&tdc_t::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__DictOutput_553_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&tdc_t::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__DictOutput_553_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&tdc_t::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("tdc_t", 526, G__DictOutput_553_0_25, (int) ('i'), G__get_linked_tagnum(&G__DictOutputLN_tdc_t), -1, 0, 1, 1, 1, 0, "u 'tdc_t' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~tdc_t", 652, G__DictOutput_553_0_26, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__DictOutput_553_0_27, (int) ('u'), G__get_linked_tagnum(&G__DictOutputLN_tdc_t), -1, 1, 1, 1, 1, 0, "u 'tdc_t' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncgoddessFull(void) {
   /* goddessFull */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictOutputLN_goddessFull));
   G__memfunc_setup("goddessFull",1148,G__DictOutput_554_0_1, 105, G__get_linked_tagnum(&G__DictOutputLN_goddessFull), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initialize",1042,G__DictOutput_554_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__DictOutput_554_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ParseID",648,G__DictOutput_554_0_4, 103, -1, G__defined_typename("Bool_t"), 0, 4, 1, 1, 0, 
"u 'string' - 0 - id s - 'Short_t' 1 - sector "
"s - 'Short_t' 1 - depth g - 'Bool_t' 1 - upStream", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadPositions",1348,G__DictOutput_554_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - filename", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPosVector",1221,G__DictOutput_554_0_6, 117, G__get_linked_tagnum(&G__DictOutputLN_solidVector), -1, 0, 4, 1, 1, 0, 
"u 'string' - 0 - type s - 'Short_t' 0 - sector "
"s - 'Short_t' 0 - depth g - 'Bool_t' 0 - upStream", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadConfiguration",1748,G__DictOutput_554_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - filename", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitializeDetectors",1983,G__DictOutput_554_0_8, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getAnalogGoddess",1627,G__DictOutput_554_0_9, 121, -1, -1, 0, 2, 1, 1, 0, 
"E - - 0 - inf i - 'Int_t' 0 - evtLength", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("printAnalogRawEvent",1963,G__DictOutput_554_0_10, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ProcessEvent",1249,G__DictOutput_554_0_11, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ResetOutput",1172,G__DictOutput_554_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "U 'detectorOUT' - 0 - det", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__DictOutput_554_0_13, 85, G__get_linked_tagnum(&G__DictOutputLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&goddessFull::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__DictOutput_554_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&goddessFull::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__DictOutput_554_0_15, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&goddessFull::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__DictOutput_554_0_16, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&goddessFull::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DictOutputLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__DictOutput_554_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__DictOutput_554_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&goddessFull::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__DictOutput_554_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&goddessFull::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__DictOutput_554_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&goddessFull::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__DictOutput_554_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&goddessFull::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("goddessFull", 1148, G__DictOutput_554_0_25, (int) ('i'), G__get_linked_tagnum(&G__DictOutputLN_goddessFull), -1, 0, 1, 1, 1, 0, "u 'goddessFull' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~goddessFull", 1274, G__DictOutput_554_0_26, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__DictOutput_554_0_27, (int) ('u'), G__get_linked_tagnum(&G__DictOutputLN_goddessFull), -1, 1, 1, 1, 1, 0, "u 'goddessFull' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncDictOutput() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalDictOutput() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
}

static void G__cpp_setup_func25() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcDictOutput() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
  G__cpp_setup_func25();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__DictOutputLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__DictOutputLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__DictOutputLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__DictOutputLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__DictOutputLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__DictOutputLN_vectorlEshortcOallocatorlEshortgRsPgR = { "vector<short,allocator<short> >" , 99 , -1 };
G__linked_taginfo G__DictOutputLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR = { "vector<unsigned short,allocator<unsigned short> >" , 99 , -1 };
G__linked_taginfo G__DictOutputLN_vectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgR = { "vector<unsigned long,allocator<unsigned long> >" , 99 , -1 };
G__linked_taginfo G__DictOutputLN_vectorlEfloatcOallocatorlEfloatgRsPgR = { "vector<float,allocator<float> >" , 99 , -1 };
G__linked_taginfo G__DictOutputLN_string = { "string" , 99 , -1 };
G__linked_taginfo G__DictOutputLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__DictOutputLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictOutputLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__DictOutputLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictOutputLN_maplEstringcOdoublecOlesslEstringgRcOallocatorlEpairlEconstsPstringcOdoublegRsPgRsPgR = { "map<string,double,less<string>,allocator<pair<const string,double> > >" , 99 , -1 };
G__linked_taginfo G__DictOutputLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__DictOutputLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__DictOutputLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__DictOutputLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__DictOutputLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__DictOutputLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__DictOutputLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__DictOutputLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__DictOutputLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__DictOutputLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__DictOutputLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__DictOutputLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__DictOutputLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__DictOutputLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__DictOutputLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__DictOutputLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__DictOutputLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__DictOutputLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__DictOutputLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__DictOutputLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__DictOutputLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__DictOutputLN_TVector3 = { "TVector3" , 99 , -1 };
G__linked_taginfo G__DictOutputLN_solidVector = { "solidVector" , 99 , -1 };
G__linked_taginfo G__DictOutputLN_goddessEvent = { "goddessEvent" , 115 , -1 };
G__linked_taginfo G__DictOutputLN_orrubaDet = { "orrubaDet" , 99 , -1 };
G__linked_taginfo G__DictOutputLN_maplEshortcOfloatcOlesslEshortgRcOallocatorlEpairlEconstsPshortcOfloatgRsPgRsPgR = { "map<short,float,less<short>,allocator<pair<const short,float> > >" , 99 , -1 };
G__linked_taginfo G__DictOutputLN_maplEshortcOunsignedsPlongcOlesslEshortgRcOallocatorlEpairlEconstsPshortcOunsignedsPlonggRsPgRsPgR = { "map<short,unsigned long,less<short>,allocator<pair<const short,unsigned long> > >" , 99 , -1 };
G__linked_taginfo G__DictOutputLN_maplEshortcOshortcOlesslEshortgRcOallocatorlEpairlEconstsPshortcOshortgRsPgRsPgR = { "map<short,short,less<short>,allocator<pair<const short,short> > >" , 99 , -1 };
G__linked_taginfo G__DictOutputLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR = { "vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >" , 99 , -1 };
G__linked_taginfo G__DictOutputLN_reverse_iteratorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<float,allocator<float> >,allocator<vector<float,allocator<float> > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictOutputLN_vectorlEintcOallocatorlEintgRsPgR = { "vector<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__DictOutputLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<int,allocator<int> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictOutputLN_BB10 = { "BB10" , 99 , -1 };
G__linked_taginfo G__DictOutputLN_detectorOUT = { "detectorOUT" , 115 , -1 };
G__linked_taginfo G__DictOutputLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__DictOutputLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__DictOutputLN_g2IntPt = { "g2IntPt" , 99 , -1 };
G__linked_taginfo G__DictOutputLN_g2CrystalEvent = { "g2CrystalEvent" , 99 , -1 };
G__linked_taginfo G__DictOutputLN_vectorlEg2IntPtcOallocatorlEg2IntPtgRsPgR = { "vector<g2IntPt,allocator<g2IntPt> >" , 99 , -1 };
G__linked_taginfo G__DictOutputLN_reverse_iteratorlEvectorlEg2IntPtcOallocatorlEg2IntPtgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<g2IntPt,allocator<g2IntPt> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictOutputLN_g2OUT = { "g2OUT" , 99 , -1 };
G__linked_taginfo G__DictOutputLN_vectorlEg2CrystalEventcOallocatorlEg2CrystalEventgRsPgR = { "vector<g2CrystalEvent,allocator<g2CrystalEvent> >" , 99 , -1 };
G__linked_taginfo G__DictOutputLN_reverse_iteratorlEvectorlEg2CrystalEventcOallocatorlEg2CrystalEventgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<g2CrystalEvent,allocator<g2CrystalEvent> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictOutputLN_goddessOut = { "goddessOut" , 99 , -1 };
G__linked_taginfo G__DictOutputLN_vectorlEstringcOallocatorlEstringgRsPgR = { "vector<string,allocator<string> >" , 99 , -1 };
G__linked_taginfo G__DictOutputLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<string,allocator<string> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictOutputLN_vectorlEdetectorOUTcOallocatorlEdetectorOUTgRsPgR = { "vector<detectorOUT,allocator<detectorOUT> >" , 99 , -1 };
G__linked_taginfo G__DictOutputLN_reverse_iteratorlEvectorlEdetectorOUTcOallocatorlEdetectorOUTgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<detectorOUT,allocator<detectorOUT> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictOutputLN_QQQ5 = { "QQQ5" , 99 , -1 };
G__linked_taginfo G__DictOutputLN_superX3 = { "superX3" , 99 , -1 };
G__linked_taginfo G__DictOutputLN_ionChamber = { "ionChamber" , 99 , -1 };
G__linked_taginfo G__DictOutputLN_tdc_t = { "tdc_t" , 99 , -1 };
G__linked_taginfo G__DictOutputLN_goddessFull = { "goddessFull" , 99 , -1 };
G__linked_taginfo G__DictOutputLN_vectorlEQQQ5cOallocatorlEQQQ5gRsPgR = { "vector<QQQ5,allocator<QQQ5> >" , 99 , -1 };
G__linked_taginfo G__DictOutputLN_reverse_iteratorlEvectorlEQQQ5cOallocatorlEQQQ5gRsPgRcLcLiteratorgR = { "reverse_iterator<vector<QQQ5,allocator<QQQ5> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictOutputLN_vectorlEsuperX3cOallocatorlEsuperX3gRsPgR = { "vector<superX3,allocator<superX3> >" , 99 , -1 };
G__linked_taginfo G__DictOutputLN_reverse_iteratorlEvectorlEsuperX3cOallocatorlEsuperX3gRsPgRcLcLiteratorgR = { "reverse_iterator<vector<superX3,allocator<superX3> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictOutputLN_vectorlEBB10cOallocatorlEBB10gRsPgR = { "vector<BB10,allocator<BB10> >" , 99 , -1 };
G__linked_taginfo G__DictOutputLN_reverse_iteratorlEvectorlEBB10cOallocatorlEBB10gRsPgRcLcLiteratorgR = { "reverse_iterator<vector<BB10,allocator<BB10> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictOutputLN_vectorlEionChambercOallocatorlEionChambergRsPgR = { "vector<ionChamber,allocator<ionChamber> >" , 99 , -1 };
G__linked_taginfo G__DictOutputLN_reverse_iteratorlEvectorlEionChambercOallocatorlEionChambergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ionChamber,allocator<ionChamber> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictOutputLN_vectorlEtdc_tcOallocatorlEtdc_tgRsPgR = { "vector<tdc_t,allocator<tdc_t> >" , 99 , -1 };
G__linked_taginfo G__DictOutputLN_reverse_iteratorlEvectorlEtdc_tcOallocatorlEtdc_tgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<tdc_t,allocator<tdc_t> >::iterator>" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableDictOutput() {
  G__DictOutputLN_TClass.tagnum = -1 ;
  G__DictOutputLN_TBuffer.tagnum = -1 ;
  G__DictOutputLN_TMemberInspector.tagnum = -1 ;
  G__DictOutputLN_TObject.tagnum = -1 ;
  G__DictOutputLN_TString.tagnum = -1 ;
  G__DictOutputLN_vectorlEshortcOallocatorlEshortgRsPgR.tagnum = -1 ;
  G__DictOutputLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR.tagnum = -1 ;
  G__DictOutputLN_vectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgR.tagnum = -1 ;
  G__DictOutputLN_vectorlEfloatcOallocatorlEfloatgRsPgR.tagnum = -1 ;
  G__DictOutputLN_string.tagnum = -1 ;
  G__DictOutputLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__DictOutputLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictOutputLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__DictOutputLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictOutputLN_maplEstringcOdoublecOlesslEstringgRcOallocatorlEpairlEconstsPstringcOdoublegRsPgRsPgR.tagnum = -1 ;
  G__DictOutputLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__DictOutputLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__DictOutputLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__DictOutputLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__DictOutputLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__DictOutputLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__DictOutputLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__DictOutputLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__DictOutputLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__DictOutputLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__DictOutputLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__DictOutputLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__DictOutputLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__DictOutputLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__DictOutputLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__DictOutputLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__DictOutputLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__DictOutputLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__DictOutputLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__DictOutputLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__DictOutputLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__DictOutputLN_TVector3.tagnum = -1 ;
  G__DictOutputLN_solidVector.tagnum = -1 ;
  G__DictOutputLN_goddessEvent.tagnum = -1 ;
  G__DictOutputLN_orrubaDet.tagnum = -1 ;
  G__DictOutputLN_maplEshortcOfloatcOlesslEshortgRcOallocatorlEpairlEconstsPshortcOfloatgRsPgRsPgR.tagnum = -1 ;
  G__DictOutputLN_maplEshortcOunsignedsPlongcOlesslEshortgRcOallocatorlEpairlEconstsPshortcOunsignedsPlonggRsPgRsPgR.tagnum = -1 ;
  G__DictOutputLN_maplEshortcOshortcOlesslEshortgRcOallocatorlEpairlEconstsPshortcOshortgRsPgRsPgR.tagnum = -1 ;
  G__DictOutputLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR.tagnum = -1 ;
  G__DictOutputLN_reverse_iteratorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictOutputLN_vectorlEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__DictOutputLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictOutputLN_BB10.tagnum = -1 ;
  G__DictOutputLN_detectorOUT.tagnum = -1 ;
  G__DictOutputLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__DictOutputLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__DictOutputLN_g2IntPt.tagnum = -1 ;
  G__DictOutputLN_g2CrystalEvent.tagnum = -1 ;
  G__DictOutputLN_vectorlEg2IntPtcOallocatorlEg2IntPtgRsPgR.tagnum = -1 ;
  G__DictOutputLN_reverse_iteratorlEvectorlEg2IntPtcOallocatorlEg2IntPtgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictOutputLN_g2OUT.tagnum = -1 ;
  G__DictOutputLN_vectorlEg2CrystalEventcOallocatorlEg2CrystalEventgRsPgR.tagnum = -1 ;
  G__DictOutputLN_reverse_iteratorlEvectorlEg2CrystalEventcOallocatorlEg2CrystalEventgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictOutputLN_goddessOut.tagnum = -1 ;
  G__DictOutputLN_vectorlEstringcOallocatorlEstringgRsPgR.tagnum = -1 ;
  G__DictOutputLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictOutputLN_vectorlEdetectorOUTcOallocatorlEdetectorOUTgRsPgR.tagnum = -1 ;
  G__DictOutputLN_reverse_iteratorlEvectorlEdetectorOUTcOallocatorlEdetectorOUTgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictOutputLN_QQQ5.tagnum = -1 ;
  G__DictOutputLN_superX3.tagnum = -1 ;
  G__DictOutputLN_ionChamber.tagnum = -1 ;
  G__DictOutputLN_tdc_t.tagnum = -1 ;
  G__DictOutputLN_goddessFull.tagnum = -1 ;
  G__DictOutputLN_vectorlEQQQ5cOallocatorlEQQQ5gRsPgR.tagnum = -1 ;
  G__DictOutputLN_reverse_iteratorlEvectorlEQQQ5cOallocatorlEQQQ5gRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictOutputLN_vectorlEsuperX3cOallocatorlEsuperX3gRsPgR.tagnum = -1 ;
  G__DictOutputLN_reverse_iteratorlEvectorlEsuperX3cOallocatorlEsuperX3gRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictOutputLN_vectorlEBB10cOallocatorlEBB10gRsPgR.tagnum = -1 ;
  G__DictOutputLN_reverse_iteratorlEvectorlEBB10cOallocatorlEBB10gRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictOutputLN_vectorlEionChambercOallocatorlEionChambergRsPgR.tagnum = -1 ;
  G__DictOutputLN_reverse_iteratorlEvectorlEionChambercOallocatorlEionChambergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictOutputLN_vectorlEtdc_tcOallocatorlEtdc_tgRsPgR.tagnum = -1 ;
  G__DictOutputLN_reverse_iteratorlEvectorlEtdc_tcOallocatorlEtdc_tgRsPgRcLcLiteratorgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableDictOutput() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__DictOutputLN_TClass);
   G__get_linked_tagnum_fwd(&G__DictOutputLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__DictOutputLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__DictOutputLN_TObject);
   G__get_linked_tagnum_fwd(&G__DictOutputLN_TString);
   G__get_linked_tagnum_fwd(&G__DictOutputLN_vectorlEshortcOallocatorlEshortgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictOutputLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictOutputLN_vectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgR);
   G__get_linked_tagnum_fwd(&G__DictOutputLN_vectorlEfloatcOallocatorlEfloatgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictOutputLN_string);
   G__get_linked_tagnum_fwd(&G__DictOutputLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__DictOutputLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__DictOutputLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictOutputLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__DictOutputLN_maplEstringcOdoublecOlesslEstringgRcOallocatorlEpairlEconstsPstringcOdoublegRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictOutputLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__DictOutputLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__DictOutputLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DictOutputLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__DictOutputLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DictOutputLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DictOutputLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DictOutputLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DictOutputLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DictOutputLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DictOutputLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DictOutputLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DictOutputLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DictOutputLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DictOutputLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DictOutputLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DictOutputLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__DictOutputLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DictOutputLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__DictOutputLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DictOutputLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__DictOutputLN_TVector3);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictOutputLN_solidVector),sizeof(solidVector),-1,323840,(char*)NULL,G__setup_memvarsolidVector,G__setup_memfuncsolidVector);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictOutputLN_goddessEvent),sizeof(goddessEvent),-1,262144,(char*)NULL,G__setup_memvargoddessEvent,G__setup_memfuncgoddessEvent);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictOutputLN_orrubaDet),sizeof(orrubaDet),-1,324871,(char*)NULL,G__setup_memvarorrubaDet,G__setup_memfuncorrubaDet);
   G__get_linked_tagnum_fwd(&G__DictOutputLN_maplEshortcOfloatcOlesslEshortgRcOallocatorlEpairlEconstsPshortcOfloatgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictOutputLN_maplEshortcOunsignedsPlongcOlesslEshortgRcOallocatorlEpairlEconstsPshortcOunsignedsPlonggRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictOutputLN_maplEshortcOshortcOlesslEshortgRcOallocatorlEpairlEconstsPshortcOshortgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictOutputLN_vectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictOutputLN_reverse_iteratorlEvectorlEvectorlEfloatcOallocatorlEfloatgRsPgRcOallocatorlEvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__DictOutputLN_vectorlEintcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictOutputLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictOutputLN_BB10),sizeof(BB10),-1,324864,(char*)NULL,G__setup_memvarBB10,G__setup_memfuncBB10);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictOutputLN_detectorOUT),sizeof(detectorOUT),-1,262144,(char*)NULL,G__setup_memvardetectorOUT,G__setup_memfuncdetectorOUT);
   G__get_linked_tagnum_fwd(&G__DictOutputLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__DictOutputLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictOutputLN_g2IntPt),sizeof(g2IntPt),-1,292096,(char*)NULL,G__setup_memvarg2IntPt,G__setup_memfuncg2IntPt);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictOutputLN_g2CrystalEvent),sizeof(g2CrystalEvent),-1,292096,"glw 11.iii.2019 the compiler made me change this from 1 to 2. ",G__setup_memvarg2CrystalEvent,G__setup_memfuncg2CrystalEvent);
   G__get_linked_tagnum_fwd(&G__DictOutputLN_vectorlEg2IntPtcOallocatorlEg2IntPtgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictOutputLN_reverse_iteratorlEvectorlEg2IntPtcOallocatorlEg2IntPtgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictOutputLN_g2OUT),sizeof(g2OUT),-1,292096,(char*)NULL,G__setup_memvarg2OUT,G__setup_memfuncg2OUT);
   G__get_linked_tagnum_fwd(&G__DictOutputLN_vectorlEg2CrystalEventcOallocatorlEg2CrystalEventgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictOutputLN_reverse_iteratorlEvectorlEg2CrystalEventcOallocatorlEg2CrystalEventgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictOutputLN_goddessOut),sizeof(goddessOut),-1,292096,(char*)NULL,G__setup_memvargoddessOut,G__setup_memfuncgoddessOut);
   G__get_linked_tagnum_fwd(&G__DictOutputLN_vectorlEstringcOallocatorlEstringgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictOutputLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__DictOutputLN_vectorlEdetectorOUTcOallocatorlEdetectorOUTgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictOutputLN_reverse_iteratorlEvectorlEdetectorOUTcOallocatorlEdetectorOUTgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictOutputLN_QQQ5),sizeof(QQQ5),-1,324864,(char*)NULL,G__setup_memvarQQQ5,G__setup_memfuncQQQ5);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictOutputLN_superX3),sizeof(superX3),-1,324864,(char*)NULL,G__setup_memvarsuperX3,G__setup_memfuncsuperX3);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictOutputLN_ionChamber),sizeof(ionChamber),-1,324864,(char*)NULL,G__setup_memvarionChamber,G__setup_memfuncionChamber);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictOutputLN_tdc_t),sizeof(tdc_t),-1,324864,(char*)NULL,G__setup_memvartdc_t,G__setup_memfunctdc_t);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictOutputLN_goddessFull),sizeof(goddessFull),-1,292096,(char*)NULL,G__setup_memvargoddessFull,G__setup_memfuncgoddessFull);
   G__get_linked_tagnum_fwd(&G__DictOutputLN_vectorlEQQQ5cOallocatorlEQQQ5gRsPgR);
   G__get_linked_tagnum_fwd(&G__DictOutputLN_reverse_iteratorlEvectorlEQQQ5cOallocatorlEQQQ5gRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__DictOutputLN_vectorlEsuperX3cOallocatorlEsuperX3gRsPgR);
   G__get_linked_tagnum_fwd(&G__DictOutputLN_reverse_iteratorlEvectorlEsuperX3cOallocatorlEsuperX3gRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__DictOutputLN_vectorlEBB10cOallocatorlEBB10gRsPgR);
   G__get_linked_tagnum_fwd(&G__DictOutputLN_reverse_iteratorlEvectorlEBB10cOallocatorlEBB10gRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__DictOutputLN_vectorlEionChambercOallocatorlEionChambergRsPgR);
   G__get_linked_tagnum_fwd(&G__DictOutputLN_reverse_iteratorlEvectorlEionChambercOallocatorlEionChambergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__DictOutputLN_vectorlEtdc_tcOallocatorlEtdc_tgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictOutputLN_reverse_iteratorlEvectorlEtdc_tcOallocatorlEtdc_tgRsPgRcLcLiteratorgR);
}
extern "C" void G__cpp_setupDictOutput(void) {
  G__check_setup_version(30051515,"G__cpp_setupDictOutput()");
  G__set_cpp_environmentDictOutput();
  G__cpp_setup_tagtableDictOutput();

  G__cpp_setup_inheritanceDictOutput();

  G__cpp_setup_typetableDictOutput();

  G__cpp_setup_memvarDictOutput();

  G__cpp_setup_memfuncDictOutput();
  G__cpp_setup_globalDictOutput();
  G__cpp_setup_funcDictOutput();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncDictOutput();
  return;
}
class G__cpp_setup_initDictOutput {
  public:
    G__cpp_setup_initDictOutput() { G__add_setup_func("DictOutput",(G__incsetup)(&G__cpp_setupDictOutput)); G__call_setup_funcs(); }
   ~G__cpp_setup_initDictOutput() { G__remove_setup_func("DictOutput"); }
};
G__cpp_setup_initDictOutput G__cpp_setup_initializerDictOutput;

